<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.erp.purchase.mapper.PurchasePlanMapper">
	<resultMap id="BaseResultMap" type="com.wimoor.erp.purchase.pojo.entity.PurchasePlan">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="number" property="number" jdbcType="CHAR" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="creator" property="creator" jdbcType="CHAR" />
		<result column="shopid" property="shopid" jdbcType="CHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="opttime" property="opttime" jdbcType="TIMESTAMP" />
		<result column="operator" property="operator" jdbcType="VARCHAR" />
		<result column="totalnum" property="totalnum" jdbcType="INTEGER" />
		<result column="totalbuyqty" property="totalbuyqty" jdbcType="INTEGER" />
		<result column="totalpayprice" property="totalpayprice" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		id, number, status, creator, shopid, createtime,o pttime, operator ,totalnum, totalbuyqty, totalpayprice
	</sql>

	<select id="getPurchasePlanForShopId" resultType="java.util.Map" parameterType="java.lang.String">
	    select plan.id planid,plan.opttime,plan.operator,pw.warehouseid,tw.name 
	    from t_erp_purchase_plan plan
		left join t_erp_purchase_plan_warahouse pw on pw.planid = plan.id and pw.shopid = plan.shopid
		left join t_erp_warehouse tw on tw.id = pw.warehouseid  
		where plan.shopid = #{shopid, jdbcType=CHAR}
			and plan.`status` = 1
    </select>
    
    <select id="getNotPlanWarehouse" resultType="java.util.Map" parameterType="java.lang.String">
	    select tw.id,tw.name 
	    from t_erp_warehouse tw 
		left join t_erp_purchase_plan_warahouse pw on pw.shopid = tw.shopid and pw.warehouseid = tw.id
		where tw.ftype = 'self'
			and tw.shopid = #{shopid, jdbcType=CHAR}
			and tw.disabled = 0
			and pw.planid is null
    </select>
    
    <select id="getUsePlanWarehouse" resultType="java.util.Map" parameterType="java.lang.String">
	    select tw.id,tw.name 
	    from t_erp_warehouse tw 
		left join t_erp_purchase_plan_warahouse pw on pw.shopid = tw.shopid and pw.warehouseid = tw.id
		where tw.ftype = 'self'
			and tw.shopid = #{shopid, jdbcType=CHAR}
			and tw.disabled = 0
    </select>

	<select id="getSale" resultType="java.util.Map" parameterType="java.util.Map">
		select m.id id,m.issfg issfg,m.name,m.sku sku,m.supplier supplierid,m.color color,m.categoryid,
		m.price price,ifnull(m.MOQ,0) moq,ifnull(m.delivery_cycle,0) delivery_cycle,
		mn.mark notice,usi.name ticename,DATE_FORMAT(mn.opttime,'%Y-%m-%d %H:%i:%s') ticetime,ifnull(mh.materialid,'show') hide,
		IFNULL(IFNULL(p.location,p.url),v.imageamazon) image,
		ifnull(pm.planamount,0) planquantity,pm.id pmid,ifnull(pm.itemprice,m.price) itemprice,pm.invamount invamount,
		max(pi.id) pitemid,max(pi.amount) pamount,max(pi.itemprice) pitemprice,
		max(pi.orderprice) porderprice,max(pi.supplier) psupplier
		from t_erp_material m
		left join t_picture p on m.image=p.id
		left join t_erp_material_mark mn on mn.materialid=m.id and mn.ftype='notice'
		left join t_erp_material_mark mh on mh.materialid=m.id and mh.ftype='phide'
		left join t_userinfo usi on usi.id=mn.operator
		left join (
			select a.shop_id shopid,IFNULL(o.msku,p.sku) sku, max(p.sku) psku, p.parentasin hasparentasin,
			<if test="search != null">
			sum(case when p.sku like  #{search,jdbcType=CHAR} then 1  else 0 end ) haspsku,
			</if>
			IFNULL(pt.location,pt.url) imageamazon 
			<if test="status =='outinv' or status2 =='outinv'">
				,sum(case when ir.afn_total_quantity>0 then 1 else 0 end ) outinv
			</if>
			<if test="groupList !=null">
				,sum(case when (
				<foreach collection="groupList" item="groupid" index="group_list" open="(" separator="or" close=")">
					a.groupid=#{groupid,jdbcType=CHAR}
				</foreach>
				) then 1 else 0 end) hasgroup
			</if>
			<if test="marketplaceList !=null">
				,sum(case when (
				<foreach collection="marketplaceList" item="marketplaceid" index="marketplace_list" open="(" separator="or" close=")">
					mk.region=#{marketplaceid,jdbcType=CHAR} or mk.marketplaceId=TRIM(#{marketplaceid,jdbcType=CHAR})
				</foreach>
				) then 1 else 0 end) hasmarket
			</if>
			<if	test='sortparam =="countryinventory"'>
				,max(case when ir.marketplaceid=#{ordercountry,jdbcType=CHAR} 
					 then ifnull(ir.afn_fulfillable_quantity,0)+ifnull(rr.reserved_fc_processing,0)+ifnull(rr.reserved_fc_transfers,0)+
				          ifnull(ir.afn_inbound_working_quantity,0)+ifnull(ir.afn_inbound_shipped_quantity,0)+
				          ifnull(ir.afn_inbound_receiving_quantity,0)
				     else 0 
				     end ) countryinventory
			</if>
			<if test='sortparam =="countrysale" or sortparam =="countrysale7" or sortparam =="countrysale30"'>
				,sum(case when mk.region=#{ordercountry,jdbcType=CHAR} or p.marketplaceid=#{ordercountry,jdbcType=CHAR}
					 then
					<if	test='sortparam =="countrysale"'>
						ifnull(tsale.presales,sy.avgsales)
					</if>
					<if test='sortparam =="countrysale7" '>
						ifnull(sy.sales_week,0)
					</if>
					<if test='sortparam =="countrysale30" '>
						ifnull(sy.sales_month,0)
					</if>
					else 0 
					end) ${sortparam}
			</if>
			from t_product_info p
			left join t_product_in_opt o on p.id=o.pid
			left join t_marketplace mk on p.marketplaceid=mk.marketplaceid
			inner join t_amazon_auth a on a.id=p.amazonAuthId
			<if test='sortparam =="countrysale"'>
			left join t_amazon_group g on g.id=a.groupid
			left join t_erp_warehouse_fba wh on (wh.marketplaceid=mk.marketplaceid or wh.marketplaceid=mk.region) and wh.shopid=#{shopid,jdbcType=CHAR}
			left join t_erp_shipcycle sc on sc.marketplaceid = wh.marketplaceid and sc.groupid=g.id and sc.sku=p.sku
			left join t_erp_estimated_sales tsale on tsale.marketplaceid = wh.marketplaceid and tsale.groupid=g.id and tsale.sku=p.sku and tsale.isInvalid=0
			</if>	
			<if	test='sortparam =="countrysale"  or sortparam =="countrysale7" or sortparam =="countrysale30"'>
			left join t_product_in_order sy on sy.pid=p.id
			</if>
			<if	test='sortparam =="countryinventory" or status =="outinv" or status2 =="outinv"'>
		  	left join t_inventory_report ir on ir.sku=p.sku and ir.amazonAuthId=p.amazonAuthId and ir.marketplaceid=
		  										case when mk.region='EU' then 'EU' else p.marketplaceid end 
		  	left join t_inventory_reserved_report rr on ir.sku=rr.sku and ir.marketplaceid=rr.marketplaceid and ir.amazonAuthId=rr.amazonAuthId 
		  </if>
			left join t_picture pt on pt.id=p.image
			where a.shop_id=#{shopid,jdbcType=CHAR} and ifnull(o.disable,0)=0 and ifnull(p.invalid,0)=0 and p.isparent=0
			<if test='searchtype =="sameasin"'>
				and p.parentasin in (SELECT t1.parentAsin FROM t_product_info t1 WHERE t1.amazonAuthId=p.amazonAuthId
				and  t1.asin like #{samesearch,jdbcType=CHAR} AND t1.invalid=0 )
			</if>
			<if test='searchtype =="samesku"'>
				and p.parentasin in  (select  t1.parentAsin FROM t_product_info t1 WHERE t1.amazonAuthId=p.amazonAuthId
				and  t1.sku like #{samesearch,jdbcType=CHAR} AND t1.invalid=0)
			</if>
			group by a.shop_id,IFNULL(o.msku,p.sku)
		)v on m.sku=v.sku and v.shopid=m.shopid
		left join t_erp_purchase_warahouse_material tpwm on tpwm.planid=#{planid,jdbcType=CHAR} and tpwm.materialid = m.id  
		left join t_erp_purchase_planitem pi on pi.materialid=m.id and pi.status=1 and pi.subplanid in 
													(select ps.id from t_erp_purchase_plansub ps 
												    	where ps.planid=#{planid,jdbcType=CHAR} and ps.status=1 )
		left join t_erp_purchase_planmodelitem pm on pm.materialid=m.id and pm.modelid in 
													(select model.modelid  from t_erp_purchase_planmodel model 
														where model.planid=#{planid,jdbcType=CHAR})
		<if test='sortparam =="countryneedship" or sortparam =="countrysaleday" or sortparam =="countryaftersaleday"'>
			left join (select itemid,marketplaceid,max(needship) needship, max(salesday) salesday, max(aftersalesday) aftersalesday 
			from t_erp_purchase_planmodelitemsub 
			<if test="groupList !=null">
			where groupid in 
			<foreach collection="groupList" item="groupid" index="group_list" open="(" separator="," close=")">
					#{groupid,jdbcType=CHAR}
				</foreach>
			</if>
			group by itemid,marketplaceid) sub on sub.itemid=pm.id and sub.marketplaceid=#{ordercountry,jdbcType=CHAR} 
		</if>																				   
		where v.shopid=#{shopid,jdbcType=CHAR}  and m.isDelete = 0 
		<if test="search != null">
			and (m.sku like #{search,jdbcType=CHAR} or v.haspsku>0)
		</if>
		<if test="skulist !=null">
			and
			<foreach collection="skulist" item="sku" index="i" open="(" separator="or" close=" )">
				m.sku like #{sku,jdbcType=CHAR}
			</foreach>
		</if>
		<if test="materialList != null and materialList.size>0 ">
			and m.id in 
			<foreach collection ="materialList" item="materialid" index= "index" open="(" close=")" separator =",">
				#{materialid,jdbcType=BIGINT}
			</foreach>
		</if>
		<if test="defoutwarehouseid != null">
			and tpwm.warehouseid=#{defoutwarehouseid,jdbcType=CHAR}
		</if>
		<if test="selected =='true'">
			and pi.id is not null
		</if>
		<if test="status =='shownormal'">
			and mh.materialid is null
		</if>
		<if test="marketplaceList !=null">
			and v.hasmarket &gt;=1
		</if>
		<if test="groupList !=null">
			and v.hasgroup &gt;=1
		</if>
		<if test="color !=null">
			and m.color =#{color,jdbcType=CHAR}
		</if>
		<if test="status =='showhid'">
			and mh.materialid is not null
		</if>
		<if test="status =='advice'">
			and ifnull(pm.planamount,0) >0
		</if>
		<if test="status =='outinv'">
			and v.outinv >0
		</if>
		<if test="status2 =='outinv'">
			and v.outinv >0
		</if>
		<if test="status2 =='havenum'">
			and ifnull(pm.planamount,0) > 0
		</if>
		<if test="issfg !=null">
			and m.issfg=#{issfg,jdbcType=CHAR}
		</if>
		<if test="owner != null">
			and m.owner=#{owner,jdbcType=CHAR}
		</if>
	    <if test="myself != null" >
	     	and m.owner = #{myself,jdbcType=CHAR}  
         </if>
		<if test="categoryid != null">
			and m.categoryid=#{categoryid,jdbcType=CHAR}
		</if>
		<if test="remark !=null">
			and mn.mark like #{remark,jdbcType=CHAR}
		</if>
		<if test="pname !=null">
			and m.name like #{pname,jdbcType=CHAR}
		</if>
		group by m.sku,m.shopid
		order by
		<if test="orderparam != null and sortparam !=null">
			<if test='sortparam =="countrysaleday"'>
				sub.salesday ${orderparam},
			</if>
			<if test='sortparam =="countryaftersaleday"'>
				sub.aftersalesday ${orderparam},
			</if> 
			<if test='sortparam =="countryneedship"'>
				sub.needship ${orderparam},
			</if>
			<if test='sortparam =="countrypamount"'>
				pi.amount ${orderparam},
			</if> 
			<if	test='sortparam !="countryaftersaleday" and sortparam !="countrysaleday" and sortparam !="countryneedship" and sortparam !="countrypamount"'>
				${sortparam} ${orderparam} ,
			</if>
		</if>
		planquantity desc,sku desc
	</select>
</mapper>