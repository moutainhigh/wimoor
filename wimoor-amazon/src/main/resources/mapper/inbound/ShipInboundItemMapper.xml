<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.inbound.mapper.ShipInboundItemMapper">
	<resultMap id="BaseResultMap" type="com.wimoor.amazon.inbound.pojo.entity.ShipInboundItem">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="ShipmentId" property="shipmentid" jdbcType="CHAR" />
		<result column="SellerSKU" property="sellersku" jdbcType="CHAR" />
		<result column="inboundplanid" property="inboundplanid" jdbcType="CHAR" />
		<result column="FulfillmentNetworkSKU" property="fulfillmentnetworksku" jdbcType="CHAR" />
		<result column="Quantity" property="quantity" jdbcType="INTEGER" />
		<result column="QuantityShipped" property="quantityshipped" jdbcType="INTEGER" />
		<result column="QuantityReceived" property="quantityreceived" jdbcType="INTEGER" />
		<result column="QuantityInCase" property="quantityincase" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ShipmentId, SellerSKU, FulfillmentNetworkSKU, Quantity, QuantityShipped,
		QuantityReceived, QuantityInCase,inboundplanid
	</sql>

	<select id="findMaterielByShipPlanId" resultType="java.util.Map" parameterType="java.lang.String">
		select tb.marketplaceid,tb.amazongroupid,tb.warehouseid,tm.id materialid,pf.sku,opt.msku
		from t_erp_ship_inboundplan tb
		left join t_product_info pf on pf.sku = #{sku,jdbcType=CHAR} and pf.marketplaceid = tb.marketplaceid
		left join t_amazon_auth auth on auth.id=pf.amazonAuthId
		left join t_product_in_opt opt on opt.pid = pf.id
		left join t_erp_material tm on tm.sku = ifnull(opt.msku,pf.sku) and tm.shopid=tb.shopid and tm.isDelete = 0
		where auth.groupid=tb.amazongroupid and tb.id = #{id,jdbcType=CHAR}
	</select>

	
	<select id="selectByShipmentid" resultType="java.util.Map" parameterType="java.lang.String">
		select distinct item.ShipmentId,item.SellerSKU,ifnull(item.Quantity,0) Quantity,
			ifnull(ifnull(item.QuantityShipped,item.Quantity),0) QuantityShipped,
			p.name ,ifnull(pt.location,ifnull(pt2.location,pt2.url)) image,m.color mcolor,
			ifnull(iv.quantity,0) invquantity,
			ifnull((select sum(iv2.quantity) 
					from t_erp_inventory iv2 
					where iv2.materialid=m.id
						and iv2.warehouseid=plan.warehouseid
						and iv2.status like 'outbound_%'),0) invquantity_outbound,
			ifnull(item.materialid,m.id) mid,item.QuantityReceived,item.QuantityInCase,p.asin,p.name,item.FulfillmentNetworkSKU
		from t_erp_ship_inbounditem item
		left join t_erp_ship_inboundPlan plan on plan.id=item.inboundplanid
		left join(select auth.groupid groupid,v.*,opt.msku msku
					from t_product_info v
					left join t_product_in_opt opt on opt.pid = v.id
					left join t_amazon_auth auth on auth.id=v.amazonAuthId
		) p on p.sku=item.SellerSKU and p.marketplaceid=plan.marketplaceid and p.groupid=plan.amazongroupid
		left join t_erp_material m on m.sku = ifnull(p.msku,p.sku) and plan.shopid=m.shopid and m.isDelete = 0
		left join t_erp_inventory iv on iv.materialid=ifnull(item.materialid,m.id) and iv.warehouseid=plan.warehouseid and iv.`status`='fulfillable'
		left join t_picture pt on m.image=pt.id
		left join t_picture pt2 on pt2.id=p.image
		where ShipmentId = #{shipmentid,jdbcType=CHAR}
	</select>
	
    <select id="summaryShipmentItem"  resultType="com.wimoor.api.amzon.inbound.pojo.vo.ShipInboundShipmenSummarytVo"   parameterType="java.lang.String">
         select item.ShipmentId,
                count(item.SellerSKU) skuamount,
                inbound.status2date auditime,
				sum(ifnull(item.Quantity,0)) sumQuantity,
				date_format(plan.createdate, '%Y-%m-%d') createdate,
				w.name warehouse ,
				ag.name groupname , 
				plan.warehouseid warehouseid,
				plan.shopid,
				m.name country ,inbound.DestinationFulfillmentCenterId center,
				ifnull(inbound.remark,plan.remark ) remark 
			from t_erp_ship_inbounditem item
			left join t_erp_ship_inboundshipment inbound on inbound.ShipmentId=item.ShipmentId
			left join t_erp_ship_inboundPlan plan on plan.id=item.inboundplanid
			left join t_erp_warehouse w on w.id = plan.warehouseid
			left join t_amazon_group ag on ag.id=plan.amazongroupid
			left join t_marketplace m on m.marketplaceId=plan.marketplaceid
			where item.ShipmentId = #{shipmentid,jdbcType=CHAR}
    </select>
    
	<select id="selectObjByShipmentid" resultType="com.wimoor.api.amzon.inbound.pojo.vo.ShipInboundItemVo"  parameterType="java.lang.String">
			select distinct item.ShipmentId, m.sku sku,ifnull(item.Quantity,0) Quantity,
				ifnull(ifnull(item.QuantityShipped,item.Quantity),0) QuantityShipped,
				m.name ,ifnull(pt.location,ifnull(pt2.location,pt2.url)) image,m.color mcolor,
				m.issfg, ifnull(iv.quantity,0) invquantity,
				ifnull(( select sum(iv2.quantity) from t_erp_inventory iv2 where iv2.materialid=m.id
					and iv2.warehouseid=plan.warehouseid and iv2.status like 'outbound_%'
				),0) invquantity_outbound,
				ifnull(item.materialid,m.id) materialid,item.QuantityReceived,item.FulfillmentNetworkSKU,
				item.SellerSKU sellersku,item.FulfillmentNetworkSKU FNSKU ,info.asin,info.name pname,
				m.boxnum,d.length boxlength,d.width boxwidth,d.height boxheight,d.weight boxweight
			from t_erp_ship_inbounditem item
			left join t_erp_ship_inboundPlan plan on plan.id=item.inboundplanid
			left join t_marketplace mk on mk.marketplaceid =plan.marketplaceid
			left join t_amazon_auth auth on auth.groupid=plan.amazongroupid and auth.region=case when mk.region='UK' then 'EU' ELSE mk.region end
			left join t_product_info info on info.marketplaceid=mk.marketplaceid and info.sku=item.SellerSKU and info.amazonauthid=auth.id
			left join t_product_in_opt opt on opt.pid=info.id
			left join t_erp_material m on m.sku =ifnull(opt.msku,info.sku) and plan.shopid=m.shopid and m.isDelete = 0
			left join t_dimensions d on d.id=m.boxDimensions
			left join t_erp_inventory iv on iv.materialid=ifnull(item.materialid,m.id) and iv.warehouseid=plan.warehouseid and iv.`status`='fulfillable'
			left join t_picture pt on m.image=pt.id
			left join(
				select auth.groupid groupid,v.* 
				from t_product_info v
				left join t_amazon_auth auth on auth.id=v.amazonAuthId
			) p on p.sku=item.SellerSKU and p.marketplaceid=plan.marketplaceid and p.groupid=plan.amazongroupid
			left join t_picture pt2 on pt2.id=p.image
			where item.ShipmentId = #{shipmentid,jdbcType=CHAR} 
	</select>

	<select id="shipmentReportBySKU" resultType="java.util.Map">
		select
		<if test="type=='sku'">
			item.SellerSKU sku,
		</if>
		<if test="type=='warehouse'">
			plan.marketplaceid,CONCAT('FBA-',mkp.`market`) warehouse,
		</if>
			SUM(item.Quantity) totalqty,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped else 0 end ) totalout,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived else 0 end ) totalrec,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived-item.QuantityShipped else 0 end ) lessrec,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped*m.price else 0 end ) worth,
			sum(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.QuantityShipped else 0 end ) needrec,
			SUM(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.Quantity-item.QuantityReceived else 0 end ) needout
		from t_erp_ship_inbounditem item
		left join t_erp_ship_inboundplan plan on plan.id=item.inboundplanid
		left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
		left join t_erp_warehouse w on plan.warehouseid=w.id
		left join t_erp_material m on m.sku=item.SellerSKU and plan.shopid=m.shopid and m.isDelete = 0
		left join t_erp_ship_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=item.ShipmentId
		where plan.shopid=#{shopid,jdbcType=CHAR}
		<if test="datetype=='createdate'">
			and plan.createdate &gt;=#{fromDate,jdbcType=DATE}
			and plan.createdate &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="datetype=='deliverydate'">
			and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
			and  shipment.shiped_date  &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="warehouseid!=null">
			and w.parentid=#{warehouseid,jdbcType=CHAR}
		</if>
		<if test="search!=null">
			<if test="searchtype!=null">
			   <if test="searchtype=='sku'">
			     and (m.sku like #{search,jdbcType=CHAR})
			   </if>
			   <if test="searchtype=='fba'">
			     and (mkp.`market` like  replace(#{search,jdbcType=CHAR},"FBA-","") )
			   </if>
			</if>
		</if>
		<if test="type=='sku'">
			group by item.sellersku
		</if>
		<if test="type=='warehouse'">
			group by plan.marketplaceid
		</if>
	</select>

	<select id="shipmentReportBySKUTotal" resultType="java.util.Map">
		select SUM(item.Quantity) totalqty,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped else 0 end ) totalout,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived else 0 end ) totalrec,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived-item.QuantityShipped else 0 end ) lessrec,
			sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped*m.price else 0 end ) worth,
			sum(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.QuantityShipped else 0 end ) needrec,
			SUM(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.Quantity-item.QuantityReceived else 0 end ) needout
		from t_erp_ship_inbounditem item
		left join t_erp_ship_inboundplan plan on plan.id=item.inboundplanid
		left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
		left join t_erp_warehouse w on plan.warehouseid=w.id
		left join t_erp_material m on m.sku=item.SellerSKU and plan.shopid=m.shopid and m.isDelete = 0
		left join t_erp_ship_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=item.ShipmentId
		where plan.shopid=#{shopid,jdbcType=CHAR}
		<if test="datetype=='createdate'">
			and  plan.createdate &gt;=#{fromDate,jdbcType=DATE}
			and  plan.createdate &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="datetype=='deliverydate'">
			and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
			and  shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
		</if>
		<if test="warehouseid!=null">
			and w.parentid=#{warehouseid,jdbcType=CHAR}
		</if>
		<if test="search!=null">
			<if test="searchtype!=null">
			   <if test="searchtype=='sku'">
			     and (m.sku like #{search,jdbcType=CHAR})
			   </if>
			   <if test="searchtype=='fba'">
			      and (mkp.`market` like  replace(#{search,jdbcType=CHAR},"FBA-","") )
			   </if>
			</if>
		</if>
	</select>

	<select id="shipArrivalTimeChart" resultType="java.util.Map">
		select sum(ifnull(item.QuantityShipped,0)) sumship, trans.arrivalTime shopdate
		from t_erp_ship_inboundshipment inbound
		left join t_erp_ship_inboundtrans trans on trans.shipmentid=inbound.shipmentid
		left join t_erp_ship_transdetail detail on detail.id = trans.channel
		left join t_erp_ship_status stat on stat.`status`=inbound.ShipmentStatus
		left join t_erp_ship_addressto ad on ad.id=inbound.ShipToAddressID
		left join t_erp_ship_inbounditem item on item.ShipmentId=inbound.ShipmentId
		left join t_erp_ship_inboundplan form on form.id=inbound.inboundplanid
		left join t_marketplace m on m.marketplaceid=form.marketplaceid
		left join t_amazon_group g on g.id=form.amazongroupid
		where trans.arrivalTime &gt; CURDATE()
			and item.SellerSKU=#{sku,jdbcType=CHAR} 
			and form.shopid=#{shopid,jdbcType=CHAR}
			and (m.marketplaceid=#{marketplaceid,jdbcType=CHAR} or m.region=#{marketplaceid,jdbcType=CHAR}) 
			and g.id=#{groupid,jdbcType=CHAR}
		group by trans.arrivalTime
	</select>

	<select id="getshotTime" resultType="java.util.Map">
		select v.psku sku,v.marketplaceId,tsale.presales,w.stocking_cycle,
			v.openDate,v.salesweek, v.salesfifteen, v.salesmonth,v.sales,
			ifnull(ir.afn_fulfillable_quantity,0)+ifnull(rr.reserved_fc_processing,0)+ifnull(rr.reserved_fc_transfers,0) quantity 
		from (
			select p.sku psku,case when m.region='EU' then 'EU' else m.marketplaceId end marketplaceId,
			sum(s.avgsales) sales,sum(s.sales_seven) salesweek, sum(ifnull(s.sales_fifteen,0)) salesfifteen,
				sum(s.sales_month) salesmonth,min(p.openDate) openDate,a.shop_id,a.groupid,p.amazonAuthId
			from t_product_info p
			left join t_product_in_order s on p.id=s.pid
			left join t_marketplace m on m.marketplaceId=p.marketplaceid
			left join t_amazon_auth a on a.id=p.amazonAuthId
		where a.shop_id=#{shopid,jdbcType=CHAR} and a.groupid = #{groupid,jdbcType=CHAR}
			and (m.marketplaceId = #{marketplaceid,jdbcType=CHAR} or m.region = #{marketplaceid,jdbcType=CHAR})
		<if test="skuList != null and skuList.size > 0 ">
			and p.sku in
			<foreach collection="skuList" item="adv" index="index" open="(" close=")" separator=",">
				#{adv,jdbcType=CHAR}
			</foreach>
		</if>
		group by p.amazonAuthId,p.sku,case when m.region='EU' then 'EU' else m.marketplaceId end) v 
		left join t_erp_warehouse_fba w on w.shopid=v.shop_id and w.marketplaceid=v.marketplaceId 
		left join t_erp_estimated_sales tsale on tsale.sku=v.psku and tsale.marketplaceid = w.marketplaceid and tsale.groupid=v.groupid and tsale.isInvalid=0
		left join t_inventory_report ir on ir.marketplaceid=w.marketplaceid and ir.amazonAuthId=v.amazonAuthId and ir.sku=v.psku 
		left join t_inventory_reserved_report rr on ir.sku=rr.sku and ir.marketplaceid=rr.marketplaceid and ir.amazonAuthId=rr.amazonAuthId 
		where v.shop_id = #{shopid,jdbcType=CHAR}
			and v.groupid = #{groupid,jdbcType=CHAR}
		<if test="skuList != null and skuList.size > 0 ">
			and v.psku in
			<foreach collection="skuList" item="adv" index="index" open="(" close=")" separator=",">
				#{adv,jdbcType=CHAR}
			</foreach>
		</if>
	</select>

	<select id="shipmentReportByLoistics" resultType="java.util.Map">
		SELECT * FROM (
			select
			<if test="type=='logitics'">
				de.company, max(com.`name`) logitics, de.channame channame,
			</if>
			<if test="type=='warehouse'">
				case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`) end warehouse,
			</if>
				sum(ifnull(dd.weight,0)*item.Quantity) readweight,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped else 0 end ) totalout,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived else 0 end ) totalrec,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived-item.QuantityShipped else 0 end ) lessrec,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped*m.price else 0 end ) worth,
				sum(case when shipment.`status` &gt;=2 and shipment.`status`&lt;=5 then item.QuantityShipped else 0 end ) needrec,
				sum(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.Quantity-item.QuantityReceived else 0 end ) needout
			from t_erp_ship_inbounditem item
			left join t_erp_ship_inboundplan plan on plan.id=item.inboundplanid
			left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
			left join t_erp_warehouse w on plan.warehouseid=w.id
			left join t_erp_material m on m.sku=item.SellerSKU and plan.shopid=m.shopid and m.isDelete = 0
			left join t_Dimensions dd on dd.id=m.pkgDimensions
			left join t_erp_ship_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=item.ShipmentId
			left join t_erp_ship_transdetail de on de.id=trans.channel
			left join t_erp_ship_transcompany com on com.id=de.company
			where plan.shopid=#{shopid,jdbcType=CHAR} 
				and shipment.status&gt;=5 
				and com.`name` is not null
			<if test="datetype=='createdate'">
				and plan.createdate &gt;=#{fromDate,jdbcType=DATE}
				and plan.createdate &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="datetype=='deliverydate'">
				and shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
				and shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="warehouseid!=null">
				and w.parentid=#{warehouseid,jdbcType=CHAR}
			</if>
			<if test="companyid!=null">
				and de.company =#{companyid,jdbcType=CHAR}
			</if>
			<if test="channelid!=null">
				and trans.channel=#{channelid,jdbcType=CHAR}
			</if>
			<if test="search!=null">
				<if test="searchtype!=null">
					<if test="searchtype=='company'">
						and (com.`name` like #{search,jdbcType=CHAR} )
					</if>
					<if test="searchtype=='fba'">
						and (mkp.`market` like #{search,jdbcType=CHAR} or mkp.region like #{search,jdbcType=CHAR} )
					</if>
				</if>
			</if>
			<if test="type=='logitics'">
				group by de.company,de.channame
			</if>
			<if test="type=='warehouse'">
				group by case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`) end
			</if>
		) v
		left join (
			select
			<if test="type=='logitics'">
				de.company, max(com.`name`) logitics, de.channame channame,
			</if>
			<if test="type=='warehouse'">
				case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`)
				end warehouse,
			</if>
				sum(case when trans.wunit='kg' then trans.transweight else 0 end) transweight_kg,
				sum(case when trans.wunit='cbm' then trans.transweight else 0 end) transweight_cbm,
				sum(ifnull(trans.singleprice,0)*ifnull(trans.transweight,0)+ifnull(trans.otherfee,0)) shipfee,
				sum(trans.otherfee) totalotherfee, count(shipment.shipmentid) shipmentnum,sum(shipment.boxnum) totalbox,
				ROUND(avg(ifnull(datediff(shipment.start_receive_date, shipment.shiped_date),0)),2) avgtime,
				count(if(shipment.status='-1',true,null )) problem
			FROM t_erp_ship_inboundshipment shipment
			left join t_erp_ship_inboundplan plan on plan.id=shipment.inboundplanid
			left join t_marketplace mkp on mkp.marketplaceid=plan.marketplaceid
			left join t_erp_warehouse w on plan.warehouseid=w.id
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.ShipmentId
			left join t_erp_ship_transdetail de on de.id=trans.channel
			left join t_erp_ship_transcompany com on com.id=de.company
			where plan.shopid=#{shopid,jdbcType=CHAR} 
				and (shipment.status&gt;=5 or shipment.start_receive_date is not null)
				and com.`name` is not null
			<if test="datetype=='createdate'">
				and plan.createdate &gt;=#{fromDate,jdbcType=DATE}
				and plan.createdate &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="datetype=='deliverydate'">
				and  shipment.shiped_date  &gt;=#{fromDate,jdbcType=DATE}
				and   shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="warehouseid!=null">
				and w.parentid=#{warehouseid,jdbcType=CHAR}
			</if>
			<if test="companyid!=null">
				and de.company =#{companyid,jdbcType=CHAR}
			</if>
			<if test="channelid!=null">
				and trans.channel=#{channelid,jdbcType=CHAR}
			</if>
			<if test="search!=null">
				<if test="searchtype!=null">
					<if test="searchtype=='company'">
						and (com.`name` like #{search,jdbcType=CHAR} )
					</if>
					<if test="searchtype=='fba'">
						and (mkp.`market` like #{search,jdbcType=CHAR} or mkp.region like #{search,jdbcType=CHAR} )
					</if>
				</if>
			</if>
			<if test="type=='logitics'">
				group by de.company, de.channame
			</if>
			<if test="type=='warehouse'">
				group by case when mkp.region='EU' then 'FBA-EU' else CONCAT('FBA-',mkp.`market`) end
			</if>
		) n on
		<if test="type=='logitics'">
			v.company=n.company and v.channame=n.channame
		</if>
		<if test="type=='warehouse'">
			v.warehouse =n.warehouse
		</if>

	</select>

	<select id="shipmentReportByLoisticsTotal" resultType="java.util.Map">
		SELECT * FROM (
			select sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped else 0 end ) totalout,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived else 0 end ) totalrec,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityReceived-item.QuantityShipped else 0 end ) lessrec,
				sum(case when shipment.`status`=5 or shipment.`status`=6 then item.QuantityShipped*m.price else 0 end ) worth,
				sum(case when shipment.`status` &gt;=2 and shipment.`status`&lt;=5 then item.QuantityShipped else 0 end ) needrec,
				sum(case when shipment.`status` &gt;=2 and shipment.`status` &lt;=5 then item.Quantity-item.QuantityReceived else 0 end ) needout,
				sum(ifnull(dd.weight,0)*item.Quantity) readweight
			from t_erp_ship_inbounditem item
			left join t_erp_ship_inboundplan plan on plan.id=item.inboundplanid
			left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
			left join t_erp_warehouse w on plan.warehouseid=w.id
			left join t_erp_material m on m.sku=item.SellerSKU and plan.shopid=m.shopid and m.isDelete = 0
			left join t_Dimensions dd on dd.id=m.pkgDimensions
			left join t_erp_ship_inboundshipment shipment on shipment.ShipmentId=item.ShipmentId
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=item.ShipmentId
			left join t_erp_ship_transdetail de on de.id=trans.channel
			left join t_erp_ship_transcompany com on com.id=de.company
			where plan.shopid=#{shopid,jdbcType=CHAR} 
				and shipment.status&gt;=5 
				and com.`name` is not null
			<if test="datetype=='createdate'">
				and  plan.createdate &gt;=#{fromDate,jdbcType=DATE}
				and  plan.createdate &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="datetype=='deliverydate'">
				and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
				and  shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="warehouseid!=null">
				and w.parentid=#{warehouseid,jdbcType=CHAR}
			</if>
			<if test="companyid!=null">
				and de.company =#{companyid,jdbcType=CHAR}
			</if>
			<if test="channelid!=null">
				and trans.channel=#{channelid,jdbcType=CHAR}
			</if>
			<if test="search!=null">
				<if test="searchtype!=null">
					<if test="searchtype=='company'">
						and (com.`name` like #{search,jdbcType=CHAR} )
					</if>
					<if test="searchtype=='fba'">
						and (mkp.`market` like #{search,jdbcType=CHAR} or  mkp.`region` like #{search,jdbcType=CHAR})
					</if>
				</if>
			</if>
		) v
		join (
			select sum(case when trans.wunit='kg' then trans.transweight else 0 end) transweight_kg,
				sum(case when trans.wunit='cbm' then trans.transweight else 0 end) transweight_cbm,
				sum(ifnull(trans.singleprice,0)*ifnull(trans.transweight,0)+ifnull(trans.otherfee,0)) shipfee,
				sum(trans.otherfee) totalotherfee,sum(shipment.boxnum) totalbox,
				count(shipment.shipmentid) shipmentnum,
				ROUND(avg(ifnull(datediff(shipment.start_receive_date, shipment.shiped_date),0)),2) avgtime,
				count(if(shipment.status='-1',true,null )) problem
			FROM t_erp_ship_inboundshipment shipment
			left join t_erp_ship_inboundplan plan on plan.id=shipment.inboundplanid
			left join t_marketplace mkp on mkp.marketplaceId=plan.marketplaceid
			left join t_erp_warehouse w on plan.warehouseid=w.id
			left join t_erp_ship_inboundtrans trans on trans.shipmentid=shipment.ShipmentId
			left join t_erp_ship_transdetail de on de.id=trans.channel
			left join t_erp_ship_transcompany com on com.id=de.company
			where plan.shopid=#{shopid,jdbcType=CHAR} 
				and shipment.status&gt;=5 
				and com.`name` is not null
			<if test="datetype=='createdate'">
				and  plan.createdate &gt;=#{fromDate,jdbcType=DATE}
				and  plan.createdate &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="datetype=='deliverydate'">
				and  shipment.shiped_date &gt;=#{fromDate,jdbcType=DATE}
				and  shipment.shiped_date &lt;=#{endDate,jdbcType=DATE}
			</if>
			<if test="warehouseid!=null">
				and w.parentid=#{warehouseid,jdbcType=CHAR}
			</if>
			<if test="companyid!=null">
				and de.company =#{companyid,jdbcType=CHAR}
			</if>
			<if test="channelid!=null">
				and trans.channel=#{channelid,jdbcType=CHAR}
			</if>
			<if test="search!=null">
				<if test="searchtype!=null">
					<if test="searchtype=='company'">
						and (com.`name` like #{search,jdbcType=CHAR} )
					</if>
					<if test="searchtype=='fba'">
						and (mkp.`market` like #{search,jdbcType=CHAR} or  mkp.`region` like #{search,jdbcType=CHAR})
					</if>
				</if>
			</if>
		) n
	</select>

</mapper>