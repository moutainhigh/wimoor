<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.common.mapper.MaterialMapper">
	<resultMap id="BaseResultMap" type="com.wimoor.amazon.common.pojo.entity.Material">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="sku" property="sku" jdbcType="CHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="shopid" property="shopid" jdbcType="CHAR" />
		<result column="upc" property="upc" jdbcType="CHAR" />
		<result column="image" property="image" jdbcType="CHAR" />
		<result column="brand" property="brand" jdbcType="CHAR" />
		<result column="itemDimensions" property="itemdimensions" jdbcType="CHAR" />
		<result column="pkgDimensions" property="pkgdimensions" jdbcType="CHAR" />
		<result column="boxDimensions" property="boxdimensions" jdbcType="CHAR" />
		<result column="boxnum" property="boxnum" jdbcType="INTEGER" />
		<result column="supplier" property="supplier" jdbcType="CHAR" />
		<result column="productCode" property="productCode" jdbcType="CHAR" />
		<result column="delivery_cycle" property="deliveryCycle" jdbcType="INTEGER" />
		<result column="assembly_time" property="assemblyTime" jdbcType="INTEGER" />
		<result column="other_cost" property="otherCost" jdbcType="DECIMAL" />
		<result column="MOQ" property="MOQ" jdbcType="INTEGER" />
		<result column="badrate" property="badrate" jdbcType="FLOAT" />
		<result column="vatrate" property="vatrate" jdbcType="FLOAT" />
		<result column="purchaseUrl" property="purchaseUrl" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="issfg" property="issfg" jdbcType="CHAR" />
		<result column="color" property="color" jdbcType="CHAR" />
		<result column="categoryid" property="categoryid" jdbcType="CHAR" />
		<result column="operator" property="operator" jdbcType="CHAR" />
		<result column="opttime" property="opttime" jdbcType="TIMESTAMP" />
		<result column="isSmlAndLight" property="isSmlAndLight" jdbcType="BIT" />
		<result column="isDelete" property="isDelete" jdbcType="BIT" />
	</resultMap>

	<select id="selectCommonImage" resultType="java.util.Map" parameterType="java.lang.String">
		SELECT count(1) count,max(m.id) id,m.image,p.location 
			from t_erp_material m
			left join t_picture p on p.id=m.image 
		where m.image is not null 
		group by m.image HAVING count(1)>1 
		order by m.opttime desc ;
	</select>
	
	<select id="getRealityPrice" resultType="java.util.Map" parameterType="java.lang.String">
           SELECT SUM(v.totalpay)/SUM(v.amount) totalamount,MIN(v.audittime) audittime  from
		    (select e.* FROM t_erp_purchase_form f
			LEFT JOIN t_erp_purchase_form_entry e ON e.formid=f.id
			WHERE e.auditstatus>=2 AND  e.paystatus=1 and e.materialid=#{materialid,jdbcType=CHAR} 
			ORDER BY f.createdate DESC
			LIMIT 10 ) v
			
	</select>
	<select id="selectByImage" resultMap="BaseResultMap" parameterType="java.lang.String">
		select * from t_erp_material t 
		where t.image=#{image,jdbcType=CHAR} 
	</select>
	
	<select id="getCountbyShopId" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(id) 
		from t_erp_material t 
		where t.shopid=#{shopid,jdbcType=CHAR} and t.isDelete = 0
	</select>

	<select id="findMaterial" resultType="java.util.Map" parameterType="java.util.Map">
		select m.id, m.sku sku,m.color color, m.name name,m.shopid shopid,ifnull(m.boxnum,0) boxnum,
			g.color catecolor,m.upc upc,g.name category,IFNULL(p.location,p.url) image,m.brand brand,
			m.price price, ifnull(i.fulfillable,0) fulfillable,m.isDelete isDelete,
			c.name supplier, m.issfg issfg, m.remark remark, u.name operator,m.supplier supplierid,
			m.opttime opttime,m.MOQ,m.delivery_cycle,m.effectivedate
			createdate,m.purchaseUrl, d.length,d.width,d.height ,d.weight
		from t_erp_material m
		left join t_dimensions d on d.id=m.pkgDimensions
		left join t_erp_material_category g on g.id=m.categoryid AND g.shopid=#{shopid,jdbcType=CHAR}
		left join t_picture p on m.image=p.id
		left join t_erp_customer c on c.id=m.supplier AND c.shopid=#{shopid,jdbcType=CHAR}
		left join ( select shopid,warehouseid,materialid ,
					sum( case when status='inbound' then quantity else 0 end ) inbound,
					sum( case when status='outbound' then quantity else 0 end ) outbound,
					sum( case when status='fulfillable' then quantity else 0 end ) fulfillable
					from t_erp_inventory 
					where shopid=#{shopid,jdbcType=CHAR}
							<if test="warehouseid != null">
								and warehouseid = #{warehouseid,jdbcType=CHAR}
							</if>
					group by shopid,materialid
		) i on i.materialid=m.id
		left join t_userinfo u on u.id=m.operator
		where m.shopid=#{shopid,jdbcType=CHAR}
		<if test='isDelete == null or isDelete == "0"'>
			and m.isDelete = 0
		</if>
	
		<if test='isDelete == "1"'>
			and m.isDelete = 1
		</if>
		<if test="ftype == 'shipment'">
			and i.fulfillable > 0
		</if>
		 <if test="warehouseid != null">
			 and i.warehouseid = #{warehouseid,jdbcType=CHAR}
		 </if>
		<if test="search != null">
			and (m.sku like #{search,jdbcType=CHAR} or m.name like
			#{search,jdbcType=CHAR} or m.remark like #{search,jdbcType=CHAR})
		</if>
		<if test="issfglist != null">
			and
			<foreach collection="issfglist" item="status" index="i" open="(" separator="or" close=" )">
				m.issfg = #{status,jdbcType=INTEGER}
			</foreach>
		</if>
		<if test="supplierid != null">
			and m.supplier = #{supplierid,jdbcType=CHAR}
		</if>
		<if test="categoryid != null">
			and m.categoryid = #{categoryid,jdbcType=CHAR}
		</if>
		<if test="name != null">
			and m.name like #{name,jdbcType=CHAR}
		</if>
		<if test="owner != null">
			and m.owner = #{owner,jdbcType=CHAR}
		</if>
		<if test="myself != null">
			and m.owner = #{myself,jdbcType=CHAR}
		</if>
		<if test="remark != null">
			and m.remark like #{remark,jdbcType=CHAR}
		</if>
		<if test="color != null">
			and m.color like #{color,jdbcType=CHAR}
		</if>
		<if test="searchsku != null">
			and
			<foreach collection="searchsku" item="sku" index="i" open="(" separator="or" close=" )">
				m.sku like #{sku,jdbcType=CHAR}
			</foreach>
		</if>
	</select>

<select id="findAllByCondition" resultType="java.util.Map" parameterType="java.util.Map">
		select m.id, m.sku sku,m.color color, m.name name,m.shopid shopid,ifnull(m.boxnum,0) boxnum,
			g.color catecolor,m.upc upc,g.name category,IFNULL(p.location,p.url) image,m.brand brand,
			q.price price, ifnull(sum(i.fulfillable),0) fulfillable,m.isDelete isDelete,
			c.name supplier, m.issfg issfg, m.remark remark, u.name operator,m.supplier supplierid,
			m.opttime opttime,m.MOQ,m.delivery_cycle,m.effectivedate
			createdate,m.purchaseUrl, d.length,d.width,d.height ,d.weight
		from t_erp_material m
		left join t_dimensions d on d.id=m.pkgDimensions
		left join t_erp_material_category g on g.id=m.categoryid AND g.shopid=#{shopid,jdbcType=CHAR}
		left join t_picture p on m.image=p.id
		left join t_erp_customer c on c.id=m.supplier AND c.shopid=#{shopid,jdbcType=CHAR}
		left join ( select shopid,warehouseid,materialid ,
					sum( case when status='inbound' then quantity else 0 end ) inbound,
					sum( case when status='outbound' then quantity else 0 end ) outbound,
					sum( case when status='fulfillable' then quantity else 0 end ) fulfillable
					from t_erp_inventory group
					 where shopid=#{shopid,jdbcType=CHAR}
					 by shopid, materialid
		) i on i.materialid=m.id
		left join ( SELECT material,max(price) price 
					FROM t_erp_stepwise_quotn group by material
		) q on m.id= q.material
		left join t_userinfo u on u.id=m.operator
		where m.shopid=#{shopid,jdbcType=CHAR}
			and m.isDelete = 0
		<if test="warehouseid != null">
			and i.warehouseid = #{warehouseid,jdbcType=CHAR}
		</if>
		<if test="supplierid != null">
			and m.supplier = #{supplierid,jdbcType=CHAR}
		</if>
		<if test="myself != null">
			and m.owner = #{myself,jdbcType=CHAR}
		</if>
		<if test="searchsku != null">
			and
			<foreach collection="searchsku" item="sku" index="i" open="(" separator="or" close=" )">
				m.sku = #{sku,jdbcType=CHAR}
			</foreach>
		</if>
 
	</select>
	
	<select id="findMaterialMapBySku" resultType="java.util.Map" parameterType="java.lang.String">
		select max(u.name) ownername, max(ifnull(p.location,p.url)) image,
			max(ifnull(m.name,i.name)) name, min(i.openDate) openDate, ifnull(max(opt.msku),max(i.sku)) sku
		from t_product_info i
		left join t_product_in_opt opt on opt.pid = i.id
		left join t_amazon_auth a on a.id=i.amazonAuthId
		left join t_erp_material m on m.sku=ifnull(opt.msku,i.sku) and m.shopid=#{shopid,jdbcType=CHAR} and m.isDelete = 0
		left join t_picture p on p.id=ifnull(m.image,i.image)
		left join t_userinfo u on u.id=m.owner
		where i.sku=#{sku,jdbcType=CHAR}
			and a.shop_id=#{shopid,jdbcType=CHAR}
	</select>

	<select id="findMaterialById" resultType="java.util.Map" parameterType="java.lang.String">
		select c.name supplier,g.name category,u.name ownername, m.supplier supplierId , IFNULL(p.location,p.url) image, m.*
		from t_erp_material m
		left join t_erp_material_category g on g.id=m.categoryid
		left join t_picture p on m.image=p.id
		left join t_erp_customer c on c.id=m.supplier
		left join t_userinfo u on u.id=m.owner
		where m.id=#{id,jdbcType=CHAR}
	</select>
	
	<select id="selectAllSKUForSelect" resultType="java.util.Map" parameterType="java.lang.String">
		select id,sku as name 
		from t_erp_material 
		where shopid=#{shopid,jdbcType=CHAR} and isDelete = 0
		<if test="sku!=null">
			and sku like #{sku,jdbcType=CHAR}
		</if>
		order by sku limit 0,10
	</select>

	<select id="selectAllSKUForLabel" resultType="java.util.Map" parameterType="java.lang.String">
		select id,sku as label 
		from t_erp_material 
		where shopid=#{shopid,jdbcType=CHAR} and isDelete = 0
		<if test="sku!=null">
			and sku like #{sku,jdbcType=CHAR}
		</if>
		order by sku
	</select>

	<select id="findDimensionsInfoBySKU" resultType="java.util.Map" parameterType="java.lang.String">
		SELECT m.price,d.length,d.width,d.height,d.weight 
		from t_erp_material m
		left join t_dimensions d on m.pkgDimensions=d.id
		where shopid=#{shopid,jdbcType=CHAR} 
			and sku=#{sku,jdbcType=CHAR} 
			and isDelete = 0 limit 0,1;
	</select>

	<select id="selectMaterialSize" resultType="java.util.Map" parameterType="java.lang.String">
		select p.sku,ifnull(p2.location,p1.location) image,m.isSmlAndLight,ps.sales_month,
			dm.length slength,dm.length_units slength_units,
			dm.width swidth,dm.width_units swidth_units,
			dm.height sheight,dm.height_units sheight_units,
			dm.weight sweight,dm.weight_units sweight_units,
			ifnull(ef.longest_side,dp.`length`) `length` ,
			ifnull(ef.unit_of_dimension,dp.length_units) length_units,
			ifnull(ef.median_side,dp.width) width,
			ifnull(ef.unit_of_dimension,dp.width_units) width_units,
			ifnull(ef.shortest_side,dp.height) height,
			ifnull(ef.unit_of_dimension,dp.height_units) height_units,
			ifnull(ef.item_package_weight,dp.weight) weight,
			ifnull(ef.unit_of_weight,dp.weight_units) weight_units,
			ifnull(ef.your_price,pp.landed_amount) price,
			ifnull(ef.currency,pp.landed_currency) currency,
			ef.estimated_fee_total totalfee,
			ef.estimated_referral_fee_per_unit referralfee,
			ef.expected_domestic_fulfilment_fee_per_unit edfba,
			ef.expected_efn_fulfilment_fee_per_unit_uk efnfba,
			ef.product_size_tier productTier,
			ifnull(p.pgroup,'') pgroup,ifnull(mc.`name`,'') category,
			ef.estimated_fixed_closing_fee fixclosing, ef.lastupdate
		from t_product_info p
		left join t_amazon_auth a on a.id=p.amazonAuthId
		left join t_product_in_opt opt on opt.pid=p.id
		left join t_product_in_order ps on p.id=ps.pid
		left join t_erp_material m on m.sku = ifnull(opt.msku,p.sku) and m.shopid = a.shop_id and m.isDelete = 0
		left join t_erp_material_category mc on m.categoryid=mc.id
		left join t_picture p1 on m.image=p1.id
		left join t_dimensions dm on m.pkgDimensions=dm.id
		left join t_product_price pp on p.marketplaceid=pp.MarketplaceId and pp.SellerId=a.sellerid 
										and pp.SellerSKU=p.sku and pp.isnewest=true and pp.ptype='BUYP'
		left join t_picture p2 on p2.id=p.image
		left join t_fba_estimated_fees ef on p.sku=ef.sku and ef.marketplaceid=p.marketplaceid and ef.asin=p.asin
		left join t_dimensions dp on dp.id=p.pageDimensions
		where a.shop_id=#{shopid,jdbcType=CHAR} and p.isparent=false and p.invalid=0 and ifnull(opt.disable,0)=0
		<if test="groupid != null">
			and a.groupid = #{groupid,jdbcType=CHAR}
		</if>
		<if test="marketplaceid != null">
			and p.marketplaceId = #{marketplaceid,jdbcType=CHAR}
		</if>
		<if test="skuname != null">
			and (p.sku like #{skuname,jdbcType=CHAR} or opt.msku like #{skuname,jdbcType=CHAR})
		</if>
	</select>
	
	<select id="findDimAndAsinBymid" resultType="java.util.Map" parameterType="java.lang.String">
		select tp.sku,tp.asin,dm.*
		from t_product_info tp
		left join t_product_in_opt opt on opt.pid = tp.id
		left join t_amazon_auth a on a.id=tp.amazonAuthId
		left join t_erp_material m on m.sku = ifnull(opt.msku,tp.sku) and m.shopid = a.shop_id
		left join t_dimensions dm on dm.id=m.pkgDimensions
		where tp.sku = #{sku,jdbcType=CHAR}
			and m.isDelete = 0
			and a.shop_id = #{shopid,jdbcType=CHAR}
			and a.groupid = #{groupid,jdbcType=CHAR}
			and tp.marketplaceid = #{marketplaceid,jdbcType=CHAR}
	</select>

	<select id="getForSum" resultType="java.util.Map" parameterType="java.util.Map">
		select m.id,m.sku,m.id materialid
		from t_erp_material m
		where m.shopid=#{shopid,jdbcType=CHAR} 
			and ifnull(m.isDelete,0) = 0 
			and m.sku in (select IFNULL(o.msku,p.sku) 
						  from t_product_info p
						  LEFT JOIN t_product_in_opt o ON o.pid=p.id
						  left join t_amazon_auth a on p.amazonAuthId =a.id
						  where a.shop_id=#{shopid,jdbcType=CHAR} 
						  	<if test="groupid != null">
								 and a.groupid=#{groupid,jdbcType=CHAR} 
							</if>
						  and ifnull(o.disable,false)=false
						  AND ifnull(p.invalid,FALSE)=false
			)
	</select>

	<select id="getOwnerList" resultType="java.util.Map" parameterType="java.lang.String">
		SELECT DISTINCT u.* 
		from t_erp_material m
		LEFT JOIN t_userinfo u on m.owner=u.id
		where shopid=#{shopid,jdbcType=CHAR} and m.isDelete = 0;
	</select>

	<select id="findMarterialForColorOwner" resultType="java.lang.String" parameterType="java.util.Map">
		select i.sku
		from 
		t_product_info i 
		left join t_amazon_auth a on a.id=i.amazonauthid
		left join t_product_in_opt o on o.pid=i.id
		left join t_erp_material t on t.shopid=a.shop_id and t.sku=ifnull(o.msku,i.sku) and t.isDelete = 0 
		where a.shop_id = #{shopid,jdbcType=CHAR}  and t.shopid=#{shopid,jdbcType=CHAR} 
		<if test="color != null">
			and t.color = #{color,jdbcType=CHAR}
		</if>
		<if test="owner != null">
			and t.owner = #{owner,jdbcType=CHAR}
		</if>
		<if test="groupid != null">
			and a.groupid=#{groupid,jdbcType=CHAR}
		</if>
		<if test="region != null">
			and a.region = #{region,jdbcType=CHAR}
		</if>
		<if test="marketplaceid != null">
			and i.marketplaceid = #{marketplaceid,jdbcType=CHAR}
		</if>
		<if test="search != null">
			and i.sku like #{search,jdbcType=CHAR}
		</if>
	</select>

	<select id="findSKUImageForProduct" resultType="java.util.Map" parameterType="java.util.List">
		select v.materialSKU,v.materialName,v.infoSKU,max(v.imageid) imageid,max(v.infoName) infoName,v.image
		,max(v.dimid) dimid,ifnull(v.length,0) length,ifnull(v.lenunit,'cm') lenunit,ifnull(v.width,0) width,ifnull(v.wunit,'cm') wunit,
		ifnull(v.height,0) height,ifnull(v.hunit,'cm') hunit,
		ifnull(v.weight,0) weight,ifnull(v.weunit,'kg') weunit
		from ( 
			select mate.sku materialSKU,mate.name materialName,info.sku infoSKU,
				max(info.image) imageid,max(info.name) infoName,ifnull(pic.location,pic.url) image,
				MAX(info.pageDimensions) dimid,
				dm.length,dm.length_units lenunit,dm.width,dm.width_units wunit,dm.height,dm.height_units hunit,
				dm.weight,dm.weight_units weunit
			from t_erp_material mate
			left join t_product_in_opt opt on opt.msku = mate.sku
			left join t_product_info info on (info.id = opt.pid or (opt.pid is null and info.sku=mate.sku)) and info.invalid = 0  
			left join t_amazon_auth auth on auth.id=info.amazonauthid
			left join t_picture pic on pic.id = info.image
			LEFT JOIN t_dimensions dm ON dm.id=info.pageDimensions
			where shopid = #{shopid,jdbcType=CHAR} and auth.shop_id= #{shopid,jdbcType=CHAR} 
				and info.id is not null
			<if test="param != null and param.size>0 ">
				and mate.sku in
				<foreach collection="param" item="adv" index="index"
					open="(" close=")" separator=",">
					#{adv,jdbcType=CHAR}
				</foreach>
			</if>
			group by mate.sku,info.sku
			union
			select mate.sku materialSKU,mate.name materialName,info.sku infoSKU,
				max(info.image) imageid,max(info.name) infoName,pic.location image,
				MAX(info.pageDimensions) dimid,
				dm.length,dm.length_units lenunit,dm.width,dm.width_units wunit,dm.height,dm.height_units hunit,
				dm.weight,dm.weight_units weunit
			from t_erp_material mate
			left join t_product_info info on info.sku = mate.sku and info.invalid = 0
			left join t_picture pic on pic.id = info.image
			LEFT JOIN t_dimensions dm ON dm.id=info.pageDimensions
			where shopid = #{shopid,jdbcType=CHAR}
				and info.id is not null
			<if test="param != null and param.size>0 ">
				and mate.sku in
				<foreach collection="param" item="adv" index="index" open="(" close=")" separator=",">
					#{adv,jdbcType=CHAR}
				</foreach>
			</if>
			group by mate.sku,info.sku) v
		group by v.materialSKU,v.infoSKU
		order by v.materialSKU
	</select>

    <select id="selectAllMaterialByShop" parameterType="java.lang.String" resultType="java.util.Map">
    	SELECT t.id,t.sku,t.name,case when t.isSmlAndLight=1 then '是' ELSE '否' end isSmallLight,t.price price,t.boxnum,
			CONCAT(ifnull(d.length,0),'-',ifnull(d.width,0),'-',ifnull(d.height,0),'-',ifnull(d.weight,0)) pageDimensions,
			CONCAT(IFNULL(d2.length,0),'-',IFNULL(d2.width,0),'-',IFNULL(d2.height,0),'-',IFNULL(d2.weight,0)) itemDimensions,
			CONCAT(IFNULL(d3.length,0),'-',IFNULL(d3.width,0),'-',IFNULL(d3.height,0),'-',IFNULL(d3.weight,0)) boxDimensions,
			case when t.issfg=2 then '半成品' when t.issfg=1 then '组装成品' ELSE '单独成品' end issfg,
			v2.ass asslist,
			v3.consumablelist,
			t.badrate,t.vatrate,
			t.brand,t.specification,cate.name category,ui.name,t.effectivedate,cust.name supplier,
			t.delivery_cycle deliverycycle,t.other_cost othercost,t.productCode purchasecode,t.purchaseUrl purchaseurl,
			t.color color,t.remark,sum(v.inbound) inbound,sum(v.qty) qty,ui.name owner, case when t.isDelete=1 then '是' else '否' end isDelete 
		FROM t_erp_material t 
		LEFT JOIN t_dimensions d ON t.pkgDimensions=d.id
		LEFT JOIN t_dimensions d2 ON t.itemDimensions=d2.id
		LEFT JOIN t_dimensions d3 ON t.boxDimensions=d3.id
		LEFT JOIN t_erp_material_category cate ON cate.id=t.categoryid
		LEFT JOIN t_userinfo ui ON ui.id=t.owner
		LEFT JOIN t_erp_customer cust ON cust.id=t.supplier
		LEFT JOIN (
			SELECT mainmid, GROUP_CONCAT( CONCAT(tm.sku,'-',subnumber,'-',tm.assembly_time)) AS ass
 			FROM t_erp_assembly a
			LEFT JOIN t_erp_material tm on tm.id=a.submid
			WHERE shopid=#{shopid,jdbcType=CHAR}
			GROUP BY mainmid
		) v2 ON v2.mainmid=t.id
		LEFT JOIN (
		     SELECT warehouseid,materialid , 
		     	 SUM(case when 'fulfillable'=STATUS OR STATUS LIKE 'outbound_%' then quantity ELSE 0 END  ) qty, 
				 SUM(case when STATUS LIKE 'inbound_purchase' then quantity ELSE 0 END  ) inbound
			 FROM t_erp_inventory 
			 WHERE shopid=#{shopid,jdbcType=CHAR}
			 GROUP BY shopid,warehouseid,materialid
		) v ON v.materialid=t.id
	   LEFT JOIN (
		    SELECT materialid, GROUP_CONCAT( CONCAT(tm.sku,'-',a.amount)) AS consumablelist
 			FROM t_erp_material_consumable a
			LEFT JOIN t_erp_material tm on tm.id=a.submaterialid
			WHERE shopid=#{shopid,jdbcType=CHAR}
			GROUP BY a.materialid
		) v3 ON v3.materialid=t.id
			WHERE t.shopid=#{shopid,jdbcType=CHAR} 
		<if test='isDelete == null or isDelete == "0"'>
			and t.isDelete = 0
		</if>
		<if test='isDelete == "1"'>
			and t.isDelete = 1
		</if>
		<if test="search != null">
			and (t.sku like #{search,jdbcType=CHAR} or t.name like #{search,jdbcType=CHAR} or t.remark like #{search,jdbcType=CHAR})
		</if>
		<if test="issfglist != null">
			and
			<foreach collection="issfglist" item="status" index="i" open="(" separator="or" close=" )">
				t.issfg = #{status,jdbcType=INTEGER}
			</foreach>
		</if>
		<if test="warehouseid != null">
			and v.warehouseid = #{warehouseid,jdbcType=CHAR}
		</if>
		<if test="supplierid != null">
			and t.supplier = #{supplierid,jdbcType=CHAR}
		</if>
		<if test="categoryid != null">
			and t.categoryid = #{categoryid,jdbcType=CHAR}
		</if>
		<if test="name != null">
			and t.name like #{name,jdbcType=CHAR}
		</if>
		<if test="owner != null">
			and t.owner = #{owner,jdbcType=CHAR}
		</if>
		<if test="myself != null">
			and t.owner = #{myself,jdbcType=CHAR}
		</if>
		<if test="remark != null">
			and t.remark like #{remark,jdbcType=CHAR}
		</if>
		<if test="color != null">
			and t.color like #{color,jdbcType=CHAR}
		</if>
		<if test="searchsku != null">
			and
			<foreach collection="searchsku" item="sku" index="i" open="(" separator="or" close=" )">
				t.sku like #{sku,jdbcType=CHAR}
			</foreach>
		</if>
		group by t.id
    </select>
  
</mapper>