<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wimoor.amazon.report.mapper.AmzSettlementSummarySkuMapper">
 
	<sql id="Base_Column_List">
		amazonAuthId, sku, marketplace_name, posted_date, order_amount, sales, principal, commission, refund
	</sql>
	
	<select id="findFinItemDataByCondition" parameterType="java.util.Map" resultType="java.util.Map">
			SELECT a.id authid,g.shopid,d.groupid ,d.marketplaceid ,d.sku ,
				g.name groupname, m.name region, d.currency custcurrency
			<foreach collection="fieldlist" item="fielditem" index="field_list" open="" separator="" close="">
				,SUM( case when convert(itemid,CHAR) = #{fielditem.value,jdbcType=CHAR} THEN ifnull(amount,0) ELSE 0 END ) ${fielditem.field}
			</foreach>
			from t_amz_fin_user_item_data d
			left join t_marketplace m on m.marketplaceid=d.marketplaceid
			left join t_amazon_group g on g.id=d.groupid
			left join t_amazon_auth a on a.groupid=g.id and a.region=case when m.region='UK' then 'EU' else m.region end
			where a.shop_id=#{shopid,jdbcType=CHAR}
			<if test="datetype==null">
				<if test='fromDate!=null'>
					and d.byday &gt;= #{fromDate,jdbcType=DATE}
				</if>
				<if test='endDate!=null'>
					and d.byday &lt;= #{endDate,jdbcType=DATE}
				</if>
			</if>
			<if test="datetype!=null">
				<if test='setfromDate!=null'>
					and d.byday &gt;= #{setfromDate,jdbcType=DATE}
				</if>
				<if test='setendDate!=null'>
					and d.byday &lt;= #{setendDate,jdbcType=DATE}
				</if>
			</if>
			
			<if test="marketplaceid!=null">
				and m.point_name=#{marketplace_name,jdbcType=CHAR}
			</if>
			<if test='groupid!=null'>
				and d.groupid = #{groupid,jdbcType=CHAR}
			</if>
			<if test='search!=null'>
				and d.sku like #{search,jdbcType=CHAR}
			</if>
			group by d.groupid ,d.marketplaceid ,d.sku,d.currency 
	</select>
	
	
		<select id="findSettlementSummarySku_FinItemData" parameterType="java.util.Map" resultType="java.util.Map">
		    SELECT 
			<foreach collection="fieldlist" item="fielditem" index="field_list" open="" separator="," close="">
				 SUM( case when convert(itemid,CHAR) = #{fielditem.value,jdbcType=CHAR}    THEN 
				                case d.currency
							    <foreach collection="currencyrate.entrySet()" index="key" item="value">
							        when #{key} then #{value}*ifnull(amount,0) 
							      </foreach>
				                   ELSE 0  END
				         ELSE 0 END ) ${fielditem.field}
			</foreach>
			from t_amz_fin_user_item_data d
			where d.shopid =#{shopid,jdbcType=CHAR}
			    <if test="groupid!=null">
			    and d.groupid=#{groupid,jdbcType=CHAR}
			    </if>
			    <if test="marketplaceid!=null">
				and d.marketplaceid=#{marketplaceid,jdbcType=CHAR}
			    </if>
			    <if test="sku!=null">
				and d.sku=#{sku,jdbcType=CHAR}
			    </if>
			    <if test="datetype==null">
				 and d.byday &gt;= #{fromDate,jdbcType=DATE}
				 and d.byday &lt;= #{endDate,jdbcType=DATE}
				</if>
				 <if test="datetype!=null">
				 and d.byday &gt;= #{setfromDate,jdbcType=DATE}
				 and d.byday &lt;= #{setendDate,jdbcType=DATE}
			    </if>
	</select>
 
 	<select id="findSettlementSummarySku_AdvSpend" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select sum(
	       case currency
		   <foreach collection="currencyrate.entrySet()" index="key" item="value">
			  when #{key} then #{value}*ifnull(rs.spend,0) 
			 </foreach>
			 ELSE 0  END ) spend
		   from t_amz_advert_report_summary rs 
		   where 1=1
		   		<if test="datetype==null">
		   		 and rs.bydate &gt;= #{fromDate,jdbcType=DATE} 
		         and  rs.bydate  &lt;= #{endDate,jdbcType=DATE}
		   		</if>
		   		<if test="datetype!=null">
		   		 and  rs.bydate &gt;= #{setfromDate,jdbcType=DATE} 
		         and  rs.bydate  &lt;= #{setendDate,jdbcType=DATE}
		   		</if>
		         <if test='sellerid!=null'>
			     and rs.sellerid=#{sellerid,jdbcType=CHAR} 
			     </if>
				<if test="marketplaceid!=null">
			     and rs.marketplaceid=#{marketplaceid,jdbcType=CHAR} 	
			     </if>
			     <if test="sku!=null"> 
			       and rs.sku =#{sku,jdbcType=CHAR} 	
			     </if>	
	</select>  

	 <select id="findSettlementAmountTypeSummary" resultType="java.util.Map" parameterType="java.util.Map">
     select v.*,g.name groupname,case when ns.transaction_type is null then 0 else 1 end nosku 
	     from ( select Max(r.amazonauthid) amazonauthid,
	            max(r.marketplace_name) maketpointname,transaction_type,amount_type,
	            amount_description, sum(
	            case r.currency
			   <foreach collection="currencyrate.entrySet()" index="key" item="value">
				  when #{key} then #{value}*ifnull( r.amount,0) 
				 </foreach>
				 ELSE 0  END
	           ) amount
			   from  
			   t_amz_settlement_summary_month   r
			   <if test="datetype!=null">
			    left join t_amz_settlement_acc_report acc on acc.settlement_id=r.settlementid
			  </if>
			   where 1=1
			   <if test="datetype==null">
			   and r.posted_date &gt;=#{fromDate,jdbcType=CHAR}
	  	       and r.posted_date &lt;=#{endDate,jdbcType=CHAR}
	  	       </if>
	  	       <if test="datetype!=null">
	  	        and	acc.deposit_date &gt;=#{fromDate,jdbcType=CHAR}
	  	        and acc.deposit_date &lt;=#{endDate,jdbcType=CHAR}
<!-- 	  	        and r.posted_date &gt;=#{setfromDate,jdbcType=CHAR}
	  	        and r.posted_date &lt;=#{setendDate,jdbcType=CHAR} -->
	  	        <if test="amazonauthid!=null">
	  	          and acc.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
	  	        </if>
	  	         <if test="marketplace_name!=null">
	  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
	  	         </if>
	  	       </if>
	               <if test="amazonauthid!=null"> 
				             and r.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
				   </if>
				   <if test='amazonAuthId==null'>
					   and exists(select id from t_amazon_auth where id=r.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
								  <if test='groupid!=null'>
									and groupid = #{groupid,jdbcType=CHAR}
								  </if>
								 )  
				 </if>
	  
		    <if test="marketplace_name != null">
				and  r.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
			</if>  
	  	     group by transaction_type,amount_type,amount_description ) v
  	     left join t_amazon_auth a on a.id=v.amazonauthid
  	     left join t_amazon_group g on g.id=a.groupid
  	     left join t_amz_settlement_amount_type_nonsku ns on  ns.transaction_type=v.transaction_type AND ns.amount_type=v.amount_type 
          AND (ns.amount_description=v.amount_description OR ns.amount_description='*')
	</select>
		
  <select id="findSettlementSummarySku_LongtermStorage" parameterType="java.util.Map" resultType="java.util.Map">
			 select sr.currency currency,sr.snapshot_date,sum(ifnull(ifnull(sr.amount_6,sr.amount_12),0))  longTermFee
					from t_fba_longterm_storage_fee_report  sr
					where 1=1
					 <if test="datetype==null">
					     and sr.snapshot_date &gt;= concat(DATE_FORMAT(#{fromDate,jdbcType=DATE},'%Y-%m'),'-01') 
                         and sr.snapshot_date  &lt;= #{endDate,jdbcType=DATE}
					 </if>
					  <if test="datetype!=null">
					     and sr.snapshot_date &gt;= #{setfromDate,jdbcType=DATE}
                         and sr.snapshot_date  &lt;= #{setendDate,jdbcType=DATE}
					 </if>
					   
                         <if test="amazonauthid!=null"> 
			             and amazonauthid=#{amazonauthid,jdbcType=CHAR} 
			             </if>
			              <if test='amazonAuthId==null'>
							and exists(select id from t_amazon_auth where id=sr.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
							  <if test='groupid!=null'>
								and groupid = #{groupid,jdbcType=CHAR}
							  </if>
							 )  
				          </if>
			             and country=#{country,jdbcType=CHAR}
			             and sku=#{sku,jdbcType=CHAR} 
			             group by `amazonauthid`, `country`,  `snapshot_date`
	</select>
	<select id="findSettlementSummarySku_StorageFee" parameterType="java.util.Map" resultType="java.util.Map">
			        select fr.currency currency,fr.`month`,sum(fr.monthly_storage_fee) storagefee
					from t_fba_storage_fee_report fr 
					where 1=1 
					<if test="datetype==null">
					and fr.`month` &gt;= DATE_FORMAT(#{fromDate,jdbcType=DATE},'%Y-%m')
					and fr.`month` &lt;=DATE_FORMAT(#{endDate,jdbcType=DATE},'%Y-%m')
					</if>
					 <if test="datetype!=null">
					and fr.`month` &gt;= DATE_FORMAT(#{setfromDate,jdbcType=DATE},'%Y-%m')
					and fr.`month` &lt;=DATE_FORMAT(#{setendDate,jdbcType=DATE},'%Y-%m')
					</if>
			        and fr.amazonauthid=#{amazonAuthId,jdbcType=CHAR}
			        and fr.country =#{country,jdbcType=CHAR} 
			        and fr.asin  =#{asin,jdbcType=CHAR} 
			        and fr.fnsku  =#{fnsku,jdbcType=CHAR} 
				    group by `amazonauthid`, `country`, `month`
	</select> 
	
	<select id="findSettlementSummarySku_FirstShipment"  parameterType="java.util.Map" resultType="java.math.BigDecimal">
        SELECT  round(SUM( case 'CNY'
		                    <foreach collection="currencyrate.entrySet()" index="key" item="value">
			                   when #{key} then #{value}*ifnull( 
					(trans.singleprice*trans.transweight+IFNULL(trans.otherfee,0))*
					(case when cfg3.id is not null then 
					(case when cfg3.shipmentStyle='weight' then d.weight
					      when cfg3.shipmentStyle='dim_weight' then (case when d.weight>(d.length*d.width*d.height/ifnull(td.drate,5000)) then d.weight else (d.length*d.width*d.height/ifnull(td.drate,5000))  end) 
					      else (case when trans.wtype=0 then d.weight ELSE d.length*d.width*d.height/ifnull(td.drate,5000) END) 
					      end) 
					else (case when cfg.shipmentStyle='weight' then d.weight
					      when cfg.shipmentStyle='dim_weight' then (case when d.weight>(d.length*d.width*d.height/ifnull(td.drate,5000)) then d.weight else (d.length*d.width*d.height/ifnull(td.drate,5000))  end) 
					      else (case when trans.wtype=0 then d.weight ELSE d.length*d.width*d.height/ifnull(td.drate,5000) END) 
					      end) 
					end)
					 
					*i.QuantityShipped/
						(
							SELECT SUM(
							(case when cfg2.id is not null then 
							(case when cfg2.shipmentStyle='weight' then d2.weight
					     	 when cfg2.shipmentStyle='dim_weight' then (case when d2.weight>(d2.length*d2.width*d2.height/ifnull(td2.drate,5000)) then d2.weight else (d2.length*d2.width*d2.height/ifnull(td2.drate,5000))  end) 
					      	else (case when trans.wtype=0 then d2.weight ELSE d2.length*d2.width*d2.height/ifnull(td2.drate,5000) END) 
					     	 end) 
							else (case when cfg1.shipmentStyle='weight' then d2.weight
					      when cfg1.shipmentStyle='dim_weight' then (case when d2.weight>(d2.length*d2.width*d2.height/ifnull(td2.drate,5000)) then d2.weight else (d2.length*d2.width*d2.height/ifnull(td2.drate,5000))  end) 
					      else (case when trans.wtype=0 then d2.weight ELSE d2.length*d2.width*d2.height/ifnull(td2.drate,5000) END) 
					      end) 
							end)
							*i2.QuantityShipped) 
							FROM t_erp_ship_inbounditem i2
							LEFT JOIN t_erp_ship_inboundshipment s2 ON i2.ShipmentId=s2.ShipmentId AND s2.inboundplanid=i2.inboundplanid
							LEFT JOIN t_erp_ship_inboundplan p2 ON p2.id=s2.inboundplanid
							LEFT JOIN t_product_info info2 ON info2.sku=i2.SellerSKU AND info2.marketplaceid=p2.marketplaceid
							LEFT JOIN t_amazon_auth a2 ON a2.id=info2.amazonAuthId
							LEFT JOIN t_product_in_opt opt2 ON opt2.pid=info2.id
							LEFT JOIN t_erp_material m2 ON m2.sku=ifnull(opt2.msku,info2.sku) AND m2.shopid=p2.shopid AND m2.isDelete=0
							LEFT JOIN t_dimensions d2 ON d2.id=m2.pkgDimensions
							left join t_amazon_group gp on gp.id=a2.groupid
							left join t_profitcfg cfg1 on cfg1.id=gp.profitcfgid
							left join t_profitcfg cfg2 on cfg2.id=opt2.profitid
							left join t_erp_ship_inboundtrans trans2  on trans2.shipmentid=s2.ShipmentId
							left join t_erp_ship_transdetail td2 on trans2.channel=td2.id and td2.company=trans2.company
							WHERE s2.ShipmentId=s.ShipmentId 
								AND s2.inboundplanid=s.inboundplanid 
								AND a2.groupid=p2.amazongroupid
							<if test="fromDate!=null and endDate!=null">
								<if test="datetype!=null">
									and s2.status5date &gt;= DATE_FORMAT(#{setfromDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
									and s2.status5date &lt;= DATE_FORMAT(#{setendDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
								</if>
								<if test="datetype==null">
									and s2.status5date &gt;= DATE_FORMAT(#{fromDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
									and s2.status5date &lt;= DATE_FORMAT(date_add(#{endDate,jdbcType=TIMESTAMP}, interval 1 day), '%Y/%m/%d')
								</if>
							</if>
						)
			  ,0) 
			 </foreach>
			 ELSE 0  END ),2) firstShipment
		FROM t_erp_ship_inbounditem i
		LEFT JOIN t_erp_ship_inboundshipment s ON i.ShipmentId=s.ShipmentId AND s.inboundplanid=i.inboundplanid
		LEFT JOIN t_erp_ship_inboundtrans trans ON trans.shipmentid =s.ShipmentId
		left join t_erp_ship_transdetail td on trans.channel=td.id and td.company=trans.company
		LEFT JOIN t_erp_ship_inboundplan p ON p.id=s.inboundplanid
		LEFT JOIN t_product_info info ON info.sku=i.SellerSKU AND info.marketplaceid=p.marketplaceid
		LEFT JOIN t_amazon_auth a ON a.id=info.amazonAuthId and a.groupid=p.amazongroupid
		LEFT JOIN t_product_in_opt opt ON opt.pid=info.id
		LEFT JOIN t_erp_material m ON m.sku=ifnull(opt.msku,info.sku) AND m.shopid=p.shopid AND m.isDelete=0
		LEFT JOIN t_dimensions d ON d.id=m.pkgDimensions
		LEFT JOIN t_amazon_group g ON g.id=p.amazongroupid
		left join t_profitcfg cfg on cfg.id=g.profitcfgid
		left join t_profitcfg cfg3 on cfg3.id=opt.profitid
		WHERE s.`status`>=5 
			AND p.shopid=#{shopid,jdbcType=CHAR} 
			AND trans.transweight>0
			<if test="datetype!=null">
				and s.status5date &gt;= DATE_FORMAT(#{setfromDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
				and s.status5date &lt;= DATE_FORMAT(#{setendDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
			</if>
			<if test="datetype==null">
				and s.status5date &gt;= DATE_FORMAT(#{fromDate,jdbcType=TIMESTAMP} , '%Y/%m/%d')
			    and s.status5date &lt;= DATE_FORMAT(date_add(#{endDate,jdbcType=TIMESTAMP}, interval 1 day) , '%Y/%m/%d')
			</if>
			<if test='sku!=null'>
		    and i.SellerSKU=#{sku,jdbcType=CHAR} 
		    </if>
		    <if test='marketplaceid!=null'>
		    and p.marketplaceid =#{marketplaceid,jdbcType=CHAR}
		    </if> 
		    <if test='groupid!=null'>
		    and p.amazongroupid=#{groupid,jdbcType=CHAR} 
		    </if>
	</select>
	
 	<select id="findSettlementSummarySku_Returns" parameterType="java.util.Map" resultType="java.util.Map">
			 select   ifnull(sum(ifnull(rt.quantity,0)),0) refundnum , ifnull(sum(ifnull(rt.mfnqty,0)),0) mfnqty 
		              from  t_amz_settlement_summary_returns rt
					 <if test="datetype!=null">
						    left join t_amz_settlement_acc_report acc on acc.settlement_id=rt.settlementid
					 </if>
		              where 1=1
		              <if test="datetype==null">
		                 and rt.posted_date &gt;= #{fromDate,jdbcType=DATE} 
		                 and rt.posted_date  &lt;= #{endDate,jdbcType=DATE}
		              </if>
				 <if test="datetype!=null">
				  	        and	acc.deposit_date&gt;=#{fromDate,jdbcType=CHAR}
				  	        and acc.deposit_date&lt;=#{endDate,jdbcType=CHAR}
				  	    <!--     and rt.posted_date &gt;= #{setfromDate,jdbcType=DATE} 
		                    and rt.posted_date  &lt;= #{setendDate,jdbcType=DATE} -->
				  	        <if test="amazonauthid!=null">
				  	          and acc.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
				  	        </if>
				  	         <if test="marketplace_name!=null">
				  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
				  	         </if>
				  	       </if>
		                 <if test='amazonAuthId!=null'>
						 and rt.amazonAuthId=#{amazonAuthId,jdbcType=CHAR} 
						 </if>
						 <if test="marketplaceid!=null">
						 and rt.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
						 </if>
						 <if test="sku!=null">
						 and rt.sku=#{sku,jdbcType=CHAR} 
						 </if>
						 <if test='amazonAuthId==null'>
							and exists(select id from t_amazon_auth where id=rt.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
							<if test='groupid!=null'>
								and groupid = #{groupid,jdbcType=CHAR}
							</if>
							)  
						</if>
	</select>  
	
	
		
 <select id="findSettlementSummary" parameterType="java.util.Map" resultType="java.util.Map">
 	select 
 
	  sum(v.salenum)  salenum,
	  sum(v.ordernum)  ordernum,	
	        sum(case 'CNY'
		     <foreach collection="currencyrate.entrySet()" index="key" item="value">
		       	 <if test="pricetype==1">
			       when #{key} then #{value}*ifnull(ifnull(mt.price,0)*(v.salenum-ifnull(v2.refundnum,0)+ifnull(v2.mfnqty,0)),0) 
			     </if>
			     <if test="pricetype==2">
			       when #{key} then #{value}*ifnull(ifnull(mt.price,0)*(v.salenum-ifnull(v2.refundnum,0)),0) 
			     </if>
			     <if test="pricetype==3">
			       when #{key} then #{value}*ifnull(ifnull(mt.price,0)*(v.salenum),0) 
			     </if>
			 </foreach>
			 ELSE 0  END)  price,	
	    sum(case 'CNY'
	      <foreach collection="currencyrate.entrySet()" index="key" item="value">
			  when #{key} then #{value}*ifnull(ifnull(mt.other_cost,0)*v.salenum,0) 
			 </foreach>
			 ELSE 0  END)  otherCost,	
	    sum(case m.currency
	      <foreach collection="currencyrate.entrySet()" index="key" item="value">
			  when #{key} then #{value}*ifnull( pip.othersfee*v.salenum,0) 
			 </foreach>
			 ELSE 0  END)  othersfee,	
	     sum(case m.currency
	      <foreach collection="currencyrate.entrySet()" index="key" item="value">
			  when #{key} then #{value}*ifnull( pip.shipmentfee*v.salenum,0) 
			 </foreach>
			 ELSE 0  END)  shipmentfee  ,
			 sum(ifnull(d.length,0)*ifnull(d.width,0)*ifnull(d.height,0)) dim
      from 
		(select 
			t.sku,
			t.marketplace_name market,
			t.marketplace_name marketplace_name,
			t.amazonAuthId,
			sum(ifnull(t.sales,0)) salenum,
			sum(ifnull(t.order_amount,0)) ordernum
			from t_amz_settlement_summary_sku t
			<if test="datetype!=null">
		    left join t_amz_settlement_acc_report acc on acc.settlement_id=t.settlementid
		    </if>
			where  1=1
			<if test="datetype==null">
			      and t.posted_date &gt;= #{fromDate,jdbcType=DATE}
				  and t.posted_date &lt;= #{endDate,jdbcType=DATE}
			</if>
			<if test="datetype!=null">
  	        and	acc.deposit_date&gt;=#{fromDate,jdbcType=CHAR}
  	        and acc.deposit_date&lt;=#{endDate,jdbcType=CHAR}
<!--   	        and t.posted_date &gt;= #{setfromDate,jdbcType=DATE}
			and t.posted_date &lt;= #{setendDate,jdbcType=DATE} -->
  	        <if test="amazonauthid!=null">
  	          and acc.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
  	        </if>
  	         <if test="marketplace_name!=null">
  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
  	         </if>
  	       </if>
			<if test="marketplaceid!=null">
				and t.marketplace_name=#{marketplace_name,jdbcType=CHAR}
			</if>
			<if test='amazonAuthId==null'>
			and exists(select id from t_amazon_auth where id=t.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
			<if test='groupid!=null'>
				and groupid = #{groupid,jdbcType=CHAR}
			</if>
			)  
			</if>
			<if test='amazonAuthId!=null'>
			and t.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
			</if>	
			group by t.amazonAuthId,t.sku,t.marketplace_name
		) v
		left join (
		    select 
		    t.sku,
			t.marketplace_name market,
			t.marketplace_name marketplace_name,
			t.amazonAuthId,
		    sum(quantity) refundnum,
		    sum(mfnqty) mfnqty
 		    from t_amz_settlement_summary_returns t
			 <if test="datetype!=null">
		       left join t_amz_settlement_acc_report acc on acc.settlement_id=t.settlementid
		     </if>
			where  1=1
			<if test="datetype==null">
			      and t.posted_date &gt;= #{fromDate,jdbcType=DATE}
				  and t.posted_date &lt;= #{endDate,jdbcType=DATE}
			</if>
			<if test="datetype!=null">
  	        and	acc.deposit_date&gt;=#{fromDate,jdbcType=CHAR}
  	        and acc.deposit_date&lt;=#{endDate,jdbcType=CHAR}
<!--   	        and t.posted_date &gt;= #{setfromDate,jdbcType=DATE}
			and t.posted_date &lt;= #{setendDate,jdbcType=DATE} -->
  	        <if test="amazonauthid!=null">
  	          and acc.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
  	        </if>
  	         <if test="marketplace_name!=null">
  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
  	         </if>
  	       </if>
			<if test="marketplaceid!=null">
				and t.marketplace_name=#{marketplace_name,jdbcType=CHAR}
			</if>
			<if test='amazonAuthId==null'>
			and exists(select id from t_amazon_auth where id=t.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
			<if test='groupid!=null'>
				and groupid = #{groupid,jdbcType=CHAR}
			</if>
			)  
			</if>
			<if test='amazonAuthId!=null'>
			and t.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
			</if>
	    group by t.amazonAuthId,t.sku,t.marketplace_name
		) v2 on v.marketplace_name=v2.marketplace_name and v.amazonAuthId=v2.amazonAuthId and v.sku=v2.sku
		left join t_amazon_auth au on au.id=v.amazonAuthId
	    left join t_marketplace m on m.point_name=v.market
		left join t_product_info info on info.marketplaceid=m.marketplaceId and info.sku=v.sku and info.amazonauthid=v.amazonAuthId
		left join t_product_in_opt opt on opt.pid=info.id
		left join t_product_in_profit pip on pip.pid=info.id
		left join t_erp_material mt on mt.sku=ifnull(opt.msku,info.sku) and mt.shopid=au.shop_id and mt.isDelete = 0
		left join t_dimensions d on d.id=mt.pkgDimensions
 </select>
 
<select id="findSettlementSummarySku" parameterType="java.util.Map" resultType="java.util.Map">
		select 
        v.sku,
        opt.fnsku,
        mt.id mid,
		au.groupid,
		v.market,
		mt.sku msku,
		mt.name cname,
		v.marketplace_name,
		v.amazonAuthId authid,
		v.amazonAuthId amazonAuthId,
		m.marketplaceId marketplaceid,
		info.asin asin,
		au.sellerid,
		v.principal,
		v.salenum,
		v.ordernum,
		v.avgprice,
		v.commission,
		v.fbafee,
		v.refund,
		v.otherfee,
		v.setincome,	
		ifnull(mt.price,0)*v.salenum price,
		ifnull(mt.price,0) itemprice,
		mt.owner,
		IFNULL(pic.location,pic.url) image,
		info.name pname,
		mt.color,
		ifnull(mt.other_cost,0) otherCost,
		ui.name ownername,
		g.name groupname,
		m.name region,
		m.currency,
		m.market country,
	    pip.othersfee othersfee,
	    ifnull(dim.length,0)*ifnull(dim.width,0)*ifnull(dim.height,0) volume, 
	    ifnull(dim.weight,0) weight
 from 
		(select 
		t.sku,
		t.marketplace_name market,
		t.marketplace_name marketplace_name,
		t.amazonAuthId,
		case when t.marketplace_name='Amazon.fr' or t.marketplace_name='Amazon.nl'
		or t.marketplace_name='Amazon.co.uk' or t.marketplace_name='Amazon.de'
		or t.marketplace_name='Amazon.es' or t.marketplace_name='Amazon.it'
		then sum(ifnull(t.principal,0))+ sum(ifnull(t.tax,0)) 
		else sum(ifnull(t.principal,0)) end  principal,
		sum(ifnull(t.sales,0)) salenum,
		sum(ifnull(t.order_amount,0)) ordernum,
		case when sum(ifnull(t.sales,0)) = 0 then 0 else sum(ifnull(t.principal,0))/sum(ifnull(t.sales,0))  end avgprice,
		sum(ifnull(t.commission,0)) commission,
		ABS(sum(ifnull(t.fbafee,0))) fbafee,
		ABS(sum(ifnull(t.refund,0))) refund,
		case when t.marketplace_name='Amazon.fr' or t.marketplace_name='Amazon.nl'
		or t.marketplace_name='Amazon.co.uk' or t.marketplace_name='Amazon.de'
		or t.marketplace_name='Amazon.es' or t.marketplace_name='Amazon.it'
		 then sum(ifnull(t.otherfee,0))
		else sum(ifnull(t.otherfee,0))+ sum(ifnull(t.tax,0))  end otherfee,
		sum(ifnull(t.principal,0)+ifnull(t.commission,0)
		+ifnull(t.fbafee,0)+ifnull(t.refund,0)
		+ifnull(t.otherfee,0)+ifnull(t.tax,0))  setincome
		from t_amz_settlement_summary_sku t
		<if test="datetype!=null">
		    left join t_amz_settlement_acc_report acc on acc.settlement_id=t.settlementid
		  </if>
		where  1=1
		<if test="datetype==null">
		  and t.posted_date &gt;= #{fromDate,jdbcType=DATE}
		  and t.posted_date &lt;= #{endDate,jdbcType=DATE}
		</if>
 		<if test="datetype!=null">
  	        and	acc.deposit_date&gt;=#{fromDate,jdbcType=CHAR}
  	        and acc.deposit_date&lt;=#{endDate,jdbcType=CHAR}
<!--   	        and t.posted_date &gt;= #{setfromDate,jdbcType=DATE}
		    and t.posted_date &lt;= #{setendDate,jdbcType=DATE} -->
  	        <if test="amazonauthid!=null">
  	          and acc.amazonauthid=#{amazonauthid,jdbcType=CHAR} 
  	        </if>
  	         <if test="marketplace_name!=null">
  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
  	         </if>
  	       </if>
		<if test="marketplaceid!=null">
			and t.marketplace_name=#{marketplace_name,jdbcType=CHAR}
		</if>
		<if test='amazonAuthId==null'>
		and exists(select id from t_amazon_auth where id=t.amazonAuthId and shop_id= #{shopid,jdbcType=CHAR}
		<if test='groupid!=null'>
			and groupid = #{groupid,jdbcType=CHAR}
		</if>
		)  
		</if>
		<if test='amazonAuthId!=null'>
		and t.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
		</if>	
		<if test='search!=null'>
		and t.sku like #{search,jdbcType=CHAR}
		</if>
		group by t.amazonAuthId,t.sku
		<if test="marketplaceid==null">
		,t.marketplace_name
		</if>
		) v
		left join t_amazon_auth au on au.id=v.amazonAuthId
	    left join t_amazon_group g on g.id=au.groupid
	    left join t_marketplace m on m.point_name=v.market
		left join t_product_info info on info.marketplaceid=m.marketplaceId and info.sku=v.sku and info.amazonauthid=v.amazonAuthId
		left join t_product_in_opt opt on opt.pid=info.id
		left join t_product_in_profit pip on pip.pid=info.id
		left join t_erp_material mt on mt.sku=ifnull(opt.msku,info.sku) and mt.shopid=au.shop_id and mt.isDelete = 0
		left join t_picture pic on pic.id=info.image 
		left join t_userinfo ui on ui.id=mt.owner
		left join t_dimensions dim on dim.id=mt.pkgDimensions
		where 1=1
		<if test='color!=null'>
			and mt.color = #{color,jdbcType=CHAR}
		</if>
		<if test='owner!=null'>
			and mt.owner = #{owner,jdbcType=CHAR}
		</if>
		<if test='myself!=null'>
			and mt.owner = #{myself,jdbcType=CHAR}
		</if>
	</select>
 
	<select id="findByCondition" parameterType="java.util.Map" resultType="java.util.Map">
		select 
        v.sku,
		v.groupid,
		v.market,
		mt.sku msku,
		mt.name cname,
		v.authid,
		m.marketplaceId marketplaceid,
		info.asin asin,
		v.sellerid,
		v.principal,
		v.salenum,
		v.ordernum,
		v.avgprice,
		v.commission,
		v.fbafee,
		v.refund,
		v.otherfee,
		v.setincome,	
 		sto.storagefee,
		term.longTermFee,  
    	ifnull(tr.refundnum,0) refundnum,  
         <if test='hasspend!=null'>
		    ifnull(adv.spend,0) spend,
		</if>  
        <if test="pricetype==1">
           ifnull(mt.price,0)*(v.salenum-ifnull(tr.refundnum,0)+ifnull(tr.mfnqty,0)) price,
        </if>
        <if test="pricetype==2">
           ifnull(mt.price,0)*(v.salenum-ifnull(tr.refundnum,0)) price,
        </if>
        <if test="pricetype==3">
           ifnull(mt.price,0)*(v.salenum) price,
        </if>
		IFNULL(pic.location,pic.url) image,
		info.name pname,
		mt.color,ifnull(mt.other_cost,0) otherCost,
		v.groupname,
		m.name region,
		m.currency,
		pip.costDetail
		<if test='hasShipment!=null'>
		,shipment.firstShipment
		</if>
 from 
		(select 
		t.sku,
		t.marketplace_name market,
		au.groupid,
		au.id authid,
		au.sellerid,
		au.shop_id shopid,
		t.marketplace_name marketplace_name,
		case when au.region='EU' then sum(ifnull(t.principal,0))+ sum(ifnull(t.tax,0)) 
		else sum(ifnull(t.principal,0)) end  principal,
		sum(ifnull(t.sales,0)) salenum,
		sum(ifnull(t.order_amount,0)) ordernum,
		case when sum(ifnull(t.sales,0)) = 0 then 0 else sum(ifnull(t.principal,0))/sum(ifnull(t.sales,0))  end avgprice,
		ABS(sum(ifnull(t.commission,0))) commission,
		ABS(sum(ifnull(t.fbafee,0))) fbafee,
		ABS(sum(ifnull(t.refund,0))) refund,
		case when au.region='EU' then sum(ifnull(t.otherfee,0))
		else sum(ifnull(t.otherfee,0))+ sum(ifnull(t.tax,0))  end otherfee,
		sum(ifnull(t.principal,0)+ifnull(t.commission,0)
		+ifnull(t.fbafee,0)+ifnull(t.refund,0)
		+ifnull(t.otherfee,0)+ifnull(t.tax,0))  setincome,	
		g.name groupname
		from t_amz_settlement_summary_sku t
		left join t_amazon_auth au on t.amazonAuthId=au.id
		left join t_amazon_group g on g.id=au.groupid
		where au.shop_id=#{shopid,jdbcType=CHAR}
		<if test='fromDate!=null'>
			and t.posted_date &gt;= #{fromDate,jdbcType=DATE}
		</if>
		<if test='endDate!=null'>
			and t.posted_date &lt;= #{endDate,jdbcType=DATE}
		</if>
		<if test="marketplaceid!=null">
			and t.marketplace_name=#{marketplace_name,jdbcType=CHAR}
		</if>
		<if test='groupid!=null'>
			and au.groupid = #{groupid,jdbcType=CHAR}
		</if>
		<if test='search!=null'>
			and t.sku like #{search,jdbcType=CHAR}
		</if>
		<if test='amazonAuthId!=null'>
		and t.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
		</if>	
		group by t.amazonAuthId,t.sku,t.marketplace_name) v
	    left join t_marketplace m on m.point_name=v.market
		left join t_product_info info on info.marketplaceid=m.marketplaceId and info.sku=v.sku and info.amazonauthid=v.authid
		left join t_product_in_opt opt on opt.pid=info.id
		left join t_product_in_profit pip on pip.pid=info.id
		left join t_erp_material mt on mt.sku=ifnull(opt.msku,info.sku) and mt.shopid=v.shopid and mt.isDelete = 0
		left join t_picture pic on pic.id=info.image 
    <if test='hasShipment!=null'>
		left join (SELECT i.sellersku,p.marketplaceid,p.amazongroupid,
			round(SUM(
					(trans.singleprice*trans.transweight+IFNULL(trans.otherfee,0))*
						(case when trans.wtype=0 then d.weight ELSE d.length*d.width*d.height/5000 END)*i.QuantityShipped/
						(
							SELECT SUM((case when trans.wtype=0 then d2.weight ELSE d2.length*d2.width*d2.height/5000 END)*i2.QuantityShipped) 
							FROM t_erp_ship_inbounditem i2
							LEFT JOIN t_erp_ship_inboundshipment s2 ON i2.ShipmentId=s2.ShipmentId AND s2.inboundplanid=i2.inboundplanid
							LEFT JOIN t_erp_ship_inboundplan p2 ON p2.id=s2.inboundplanid
							LEFT JOIN t_product_info info2 ON info2.sku=i2.SellerSKU AND info2.marketplaceid=p2.marketplaceid
							LEFT JOIN t_amazon_auth a2 ON a2.id=info2.amazonAuthId
							LEFT JOIN t_product_in_opt opt2 ON opt2.pid=info2.id
							LEFT JOIN t_erp_material m2 ON m2.sku=ifnull(opt2.msku,info2.sku) AND m2.shopid=p2.shopid AND m2.isDelete=0
							LEFT JOIN t_dimensions d2 ON d2.id=m2.pkgDimensions
							WHERE s2.ShipmentId=s.ShipmentId 
								AND s2.inboundplanid=s.inboundplanid 
								AND a2.groupid=p2.amazongroupid
							<if test="fromDate!=null and endDate!=null">
								and s2.status5date &gt;= DATE_FORMAT(#{fromDate,jdbcType=TIMESTAMP}, '%Y/%m/%d')
								and s2.status5date &lt;= DATE_FORMAT(date_add(#{endDate,jdbcType=TIMESTAMP}, interval 1 day), '%Y/%m/%d')
							</if>
						)
			),2) firstShipment
		FROM t_erp_ship_inbounditem i
		LEFT JOIN t_erp_ship_inboundshipment s ON i.ShipmentId=s.ShipmentId AND s.inboundplanid=i.inboundplanid
		LEFT JOIN t_erp_ship_inboundtrans trans ON trans.shipmentid =s.ShipmentId
		LEFT JOIN t_erp_ship_inboundplan p ON p.id=s.inboundplanid
		LEFT JOIN t_product_info info ON info.sku=i.SellerSKU AND info.marketplaceid=p.marketplaceid
		LEFT JOIN t_amazon_auth a ON a.id=info.amazonAuthId and a.groupid=p.amazongroupid
		LEFT JOIN t_product_in_opt opt ON opt.pid=info.id
		LEFT JOIN t_erp_material m ON m.sku=ifnull(opt.msku,info.sku) AND m.shopid=p.shopid AND m.isDelete=0
		LEFT JOIN t_dimensions d ON d.id=m.pkgDimensions
		WHERE s.`status`>=5 
			AND p.shopid=#{shopid,jdbcType=CHAR} 
			AND trans.transweight>0
		<if test="fromDate!=null and endDate!=null">
			and s.status5date &gt;= DATE_FORMAT(#{fromDate,jdbcType=TIMESTAMP} , '%Y/%m/%d')
			and s.status5date &lt;= DATE_FORMAT(date_add(#{endDate,jdbcType=TIMESTAMP}, interval 1 day) , '%Y/%m/%d')
		</if>
		<if test="groupid!=null">
			and p.amazongroupid= #{groupid,jdbcType=CHAR}
		</if>
		<if test="marketplaceid!=null">
			and p.marketplaceid= #{marketplaceid,jdbcType=CHAR}
		</if>
		<if test="search!=null">
			and i.sellersku like #{search,jdbcType=CHAR}
		</if>
		GROUP BY i.sellersku) shipment on shipment.sellersku=v.sku and shipment.marketplaceid = m.marketplaceid and shipment.amazongroupid=v.groupid 
		</if> 
  		left join (select rt.sku trsku,rt.amazonAuthId tramazonAuthId,rt.marketplace_name trmarketplace_name,
		           ifnull(sum(ifnull(rt.quantity,0)),0) refundnum , ifnull(sum(ifnull(rt.mfnqty,0)),0) mfnqty
		              from  t_amz_settlement_summary_returns rt
		              left join t_amazon_auth a on   a.id=rt.amazonauthid
		              where 
		                rt.posted_date &gt;= #{fromDate,jdbcType=DATE} and rt.posted_date  &lt;= #{endDate,jdbcType=DATE}
		                	<if test='search!=null'>
								and  rt.sku like #{search,jdbcType=CHAR}
							</if>
					    and   a.shop_id=#{shopid,jdbcType=CHAR} 
						  <if test='groupid!=null'>
				              and a.groupid = #{groupid,jdbcType=CHAR}
			              </if> 
			               <if test='amazonAuthId!=null'>
							and rt.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
							</if>	
							 <if test='marketplace_name!=null'>
							and rt.marketplace_name= #{marketplace_name,jdbcType=CHAR}
							</if>	
							group by rt.amazonAuthId,rt.marketplace_name,rt.sku
		             ) tr   on tr.trsku = v.sku and tr.tramazonAuthId = v.authid and tr.trmarketplace_name = v.market 
	   left join (select fr.amazonauthid,fr.country,fr.asin,max(fr.`month`) month,
	               sum(  
	               此处逻辑分为四个部分1：当开始日期与结束日期在同一个月时 费用除以当月天数乘以开始日期与结束日期的相差天数
	                                   2：当开始月当前月份吻合，说明要算开始日期到月底的天数对应的分摊费用
	                                   3：当结束日期与月份吻合，说明要算月首到结束日期的天数对应的分摊费用
	                                   4：当日期不与开始日期和结束日期吻合时，直接使用当月费用
	               
					case when      month(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'))=month(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))  
					then 
					        fr.monthly_storage_fee/
					        DATEDIFF(DATE_ADD(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d')-day(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))+1,interval 1 MONTH ),
					        DATE_ADD(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'),interval -day(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))+1 DAY))   
					        *
					        (DATEDIFF(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'),STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d')) +1)
					 
					ELSE   
					                case when   month(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))=month(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))  
					                then 
					                fr.monthly_storage_fee
					                /
					                DATEDIFF(DATE_ADD(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d')-day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1,interval 1 MONTH ),
					                DATE_ADD(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'),interval -day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1 DAY)) 
					                *
					                DATEDIFF(DATE_ADD(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d')-day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1,interval 1 MONTH ),
					                STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))  
					                ELSE 
					                          case when  month(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'))=month(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))  
					                          then 
					                                 fr.monthly_storage_fee
					                                /
					                                DATEDIFF(DATE_ADD(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d')-day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1,interval 1 MONTH ),
					                                DATE_ADD(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'),interval -day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1 DAY)) 
					                                *
					                                DATEDIFF(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'),         
					                                DATE_ADD(STR_TO_DATE(CONCAT(fr.`month`,'-01'),'%Y-%m-%d')-day(STR_TO_DATE(CONCAT(`month`,'-01'),'%Y-%m-%d'))+1,INTERVAL -1 DAY))  
					                     ELSE 
					                         fr.monthly_storage_fee
					                     END 
					                
					                END 
					 
					 END 
                    ) storagefee
					from t_fba_storage_fee_report fr 
					left join t_amazon_auth a on    a.id=fr.amazonauthid
					where fr.`month`>= DATE_FORMAT(#{fromDate,jdbcType=DATE},'%Y-%m')
					and fr.`month` &lt;=DATE_FORMAT(#{endDate,jdbcType=DATE},'%Y-%m')
		             and a.shop_id=#{shopid,jdbcType=CHAR} 
					 <if test='groupid!=null'>
				          and a.groupid = #{groupid,jdbcType=CHAR}
			          </if>
			          <if test='amazonAuthId!=null'>
							and fr.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
					  </if>	
					  	 <if test='country'>
							and fr.country= #{country,jdbcType=CHAR}
						 </if>	
          			 group by fr.amazonauthid,fr.country,fr.asin  
                   ) sto on sto.amazonauthid=info.amazonauthid and sto.country=m.market and sto.asin=info.asin 
       left join (select sr.amazonauthid,sr.country,sr.asin,sr.sku,
                  DATE_FORMAT(sr.snapshot_date,'%Y-%m') snapshot_date,
                    sum(  
                       				case when      month(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'))=month(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))  
					then 
					        ifnull(ifnull(sr.amount_6,sr.amount_12),0) /
					        DATEDIFF(DATE_ADD(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d')-day(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))+1,interval 1 MONTH ),
					        DATE_ADD(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'),interval -day(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))+1 DAY))   
					        *
					        (DATEDIFF(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'),STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))+1) 
					 
					ELSE   
					                case when   month(STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))=month(snapshot_date)  
					                then 
					             ifnull(ifnull(sr.amount_6,sr.amount_12),0) 
					                /
					                DATEDIFF(DATE_ADD(snapshot_date-day(snapshot_date)+1,interval 1 MONTH ),
					                DATE_ADD(snapshot_date,interval -day(snapshot_date)+1 DAY)) 
					                *
					                DATEDIFF(DATE_ADD(snapshot_date-day(snapshot_date)+1,interval 1 MONTH ),
					                STR_TO_DATE(#{fromDate,jdbcType=DATE},'%Y-%m-%d'))  
					                ELSE 
					                          case when  month(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'))=month(snapshot_date)  
					                          then 
					                                ifnull(ifnull(sr.amount_6,sr.amount_12),0) 
					                                /
					                                DATEDIFF(DATE_ADD(snapshot_date-day(snapshot_date)+1,interval 1 MONTH ),
					                                DATE_ADD(snapshot_date,interval -day(snapshot_date)+1 DAY)) 
					                                *
					                           DATEDIFF(STR_TO_DATE(#{endDate,jdbcType=DATE},'%Y-%m-%d'),         
					                                DATE_ADD(snapshot_date-day(snapshot_date)+1,INTERVAL -1 DAY))  
					                     ELSE 
					                      ifnull(ifnull(sr.amount_6,sr.amount_12),0) 
					                     END 
					                
					                END 
					 
					 END 
					                         
			 
                    ) longTermFee
					from t_fba_longterm_storage_fee_report  sr
					left join t_amazon_auth a on    a.id=sr.amazonauthid
					where 
					    sr.snapshot_date >= concat(DATE_FORMAT(#{fromDate,jdbcType=DATE},'%Y-%m'),'-01') 
                        and sr.snapshot_date  &lt;= #{endDate,jdbcType=DATE}
                         and a.shop_id=#{shopid,jdbcType=CHAR} 
						  <if test='groupid!=null'>
				              and a.groupid = #{groupid,jdbcType=CHAR}
			              </if>
			      
		               <if test='search!=null'>
						 and   sr.sku like #{search,jdbcType=CHAR}
					   </if>
			             <if test='amazonAuthId!=null'>
							and sr.amazonAuthId= #{amazonAuthId,jdbcType=CHAR}
						 </if>	
					    <if test='country!=null'>
							and sr.country= #{country,jdbcType=CHAR}
						 </if>	
					  GROUP BY amazonauthid,country,sku
                   ) term on term.amazonauthid=info.amazonauthid and term.country=m.market and term.sku=info.sku 
      <if test='hasspend!=null'>
		left join (select rs.sellerid advsellerid,rs.marketplaceid advmarketplaceid,rs.sku advsku,sum(rs.spend) spend
		   from t_amz_advert_report_summary rs 
		   where 
		            rs.bydate &gt;= #{fromDate,jdbcType=DATE} and  rs.bydate  &lt;= #{endDate,jdbcType=DATE}
		            <if test='search!=null'>
						 and   rs.sku like #{search,jdbcType=CHAR}
					 </if>
					   <if test='sellerid!=null'>
							and rs.sellerid= #{sellerid,jdbcType=CHAR}
						 </if>	
						  <if test='marketplaceid!=null'>
							and rs.marketplaceid= #{marketplaceid,jdbcType=CHAR}
						 </if>
						   <if test='sellerid==null'>
							and exists 
									 (select id from t_amazon_auth a where   a.sellerid=rs.sellerid
									  and a.shop_id=#{shopid,jdbcType=CHAR} 
									  <if test='groupid!=null'>
							              and a.groupid = #{groupid,jdbcType=CHAR}
						              </if>
						             )
						 </if>		
					
		           group by  rs.sellerid, rs.marketplaceid, rs.sku
		) adv on adv.advsellerid=v.sellerid and adv.advmarketplaceid=m.marketplaceId and adv.advsku=v.sku 
	 </if> 
			where 1=1
		<if test='color!=null'>
			and mt.color = #{color,jdbcType=CHAR}
		</if>
		<if test='owner!=null'>
			and mt.owner = #{owner,jdbcType=CHAR}
		</if>
		<if test='myself!=null'>
			and mt.owner = #{myself,jdbcType=CHAR}
		</if>
	</select>
 
	<delete id="refreshSummary" parameterType="java.util.Map">
		delete from t_amz_settlement_summary_sku
		where marketplace_name = #{marketplace_name,jdbcType=CHAR}
			and posted_date >= #{beginDate,jdbcType=DATE}
			and posted_date &lt;= #{endDate,jdbcType=DATE}
			and amazonAuthId=#{amazonAuthId,jdbcType=CHAR}
			 and settlementid=#{settlement_id,jdbcType=CHAR}
			;
			
		insert into t_amz_settlement_summary_sku
		select UUID_SHORT(), r.settlement_id,r.amazonauthid,IFNULL(r.sku,'*'),rt.marketplace_name,posted_date,
			count(distinct case when transaction_type='Order' and amount_description='Principal' then order_id else null end) order_amount ,
			sum(case when amount_description='Principal' and transaction_type='Order' and amount_type='ItemPrice' then quantity_purchased else 0 end) sales,
			sum(case when amount_description='Principal' and transaction_type='Order' then amount else 0 end) principal,
			sum(case when amount_description like 'Commission%' and (transaction_type='Order' or  transaction_type='Refund') then amount else 0 end) commission,
			sum(case when (amount_description like 'FBA%') and transaction_type='Order' then amount else 0 end ) fbafee,
			sum(case when amount_description='Principal' and transaction_type='Refund' then amount else 0 end ) refund,
			sum(
				case when not(amount_description='Principal' and transaction_type='Order' ) 
				and not(amount_description like 'Commission%' and  (transaction_type='Order' or  transaction_type='Refund') ) and
				not(amount_description like 'FBA%' and transaction_type='Order') and
				not(amount_description='Principal' and transaction_type='Refund') and
				not(amount_description='Tax' and transaction_type='Order' and amount_type='ItemPrice' ) 
				then amount else 0 end ) otherfee ,
			sum(case when amount_description='Tax' and transaction_type='Order' and amount_type='ItemPrice' then amount else 0 end) tax
		from t_amz_settlement_report r
		left JOIN t_amz_settlement_acc_report rt ON r.settlement_id=rt.settlement_id
		where rt.marketplace_name = #{marketplace_name,jdbcType=CHAR}
			and r.posted_date >= #{beginDate,jdbcType=DATE}
			and r.posted_date &lt;= #{endDate,jdbcType=DATE}
			and r.amazonAuthId=#{amazonAuthId,jdbcType=CHAR}
			and r.settlement_id=#{settlement_id,jdbcType=CHAR}
		group BY r.amazonAuthId,sku,rt.marketplace_name ,r.posted_date
	</delete>
	
	<select id="findSettlementOverall" resultType="java.util.Map" parameterType="java.util.Map">
		select * from (SELECT UUID_SHORT() id,a.groupid pid,r.amazonauthid,r.marketplace_name,r.currency,
		sum(case when amount_description='Principal'  and transaction_type='Order'  then amount else 0 end) principal,
		sum(case when r.amount_description = 'Commission' AND (r.transaction_type='Order' or  r.transaction_type='Refund')  then amount else 0 end) commission,
		sum(case when (amount_description like 'FBA%') and transaction_type='Order' then amount else 0 end ) fbafee,
		sum(case when amount_description='Principal' and transaction_type='Refund' then amount else 0 end ) refund,
		sum(case when amount_type='Cost of Advertising' and transaction_type='ServiceFee' then amount else 0 end ) advfee,
		sum(case when amount_description='Tax' and transaction_type='Order' and amount_type='ItemPrice' then amount else 0 end) tax,
		sum(case when amount_description='Storage Fee' and transaction_type='other-transaction' then amount else 0 end ) storagefee,
		sum(case when amount_description='FBA International Freight Shipping Charge' then amount else 0 end) shipcharge,
		sum(case when amount_description='Previous Reserve Amount Balance' or 
		amount_description='Current Reserve Amount' then amount else 0 end) reserve,
		 		sum(case when amount_description='Previous Reserve Amount Balance' or 
		 amount_description like 'Save%' then amount else 0 end) savefee,
		 sum(case when amount_description='Transfer of funds unsuccessful: Amazon has cancelled your transfer of funds.' then amount else 0 end) untransfer,
		SUM(amount) setin
		FROM t_amz_settlement_summary_month r 
		LEFT JOIN t_amazon_auth a ON a.id=r.amazonAuthId
	  <if test="datetype!=null">
		left join t_amz_settlement_acc_report acc on acc.settlement_id=r.settlementid
	  </if>
		 where 1=1
			 <if test="datetype==null">
				 and r.posted_date &gt;=#{fromDate,jdbcType=CHAR}
		  	     and r.posted_date &lt;=#{endDate,jdbcType=CHAR}
		  	 </if>
		  	  <if test="datetype!=null">
		  	        and	acc.deposit_date &gt;=#{fromDate,jdbcType=CHAR}
		  	        and acc.deposit_date &lt;=#{endDate,jdbcType=CHAR}
	<!-- 	  	        and r.posted_date &gt;=#{setfromDate,jdbcType=CHAR}
		  	        and r.posted_date &lt;=#{setendDate,jdbcType=CHAR} -->
		  	        <if test="amazonAuthId!=null">
		  	          and acc.amazonauthid=#{amazonAuthId,jdbcType=CHAR} 
		  	        </if>
		  	         <if test="marketplace_name!=null">
		  	          and acc.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
		  	         </if>
		  	 </if>
		     <if test="amazonAuthId!=null"> 
					 and r.amazonauthid=#{amazonAuthId,jdbcType=CHAR} 
			 </if>
		     <if test='amazonAuthId==null'>
					  and a.shop_id= #{shopid,jdbcType=CHAR}
					  <if test='groupid!=null'>
						 and a.groupid = #{groupid,jdbcType=CHAR}
					 </if>
		      </if>
		     <if test="marketplace_name != null">
					and  r.marketplace_name=#{marketplace_name,jdbcType=CHAR} 
			 </if>  
		GROUP BY r.amazonauthid,r.marketplace_name
		) v11 order by v11.setin desc
	</select>
</mapper>